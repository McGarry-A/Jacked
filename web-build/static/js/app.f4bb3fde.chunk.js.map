{"version":3,"sources":["store/templateSlice.ts","utils/Auth/saveToAsyncStorage.ts","utils/Auth/saveToLocalStorage.ts","store/userSlice.ts","store/weightSlice.ts","store/index.ts","store/exerciseList.ts","store/workoutHistorySlice.ts","components/Utils/ToastAlert.tsx","utils/Workouts/calculateOneRepMax.ts","supabase/supabaseClient.ts","store/currentWorkoutSlice.ts","hooks/useColorScheme.ts","components/Widgets/SessionFrequency/config.ts","hooks/usePreviousWorkoutDates.ts","hooks/useSessionFrequency.ts","utils/Date/getPreviousMonday.ts","components/Widgets/ScreenWidth.ts","hooks/useIsApp.ts","components/Widgets/SessionFrequency/SessionFrequencyWidget.tsx","hooks/usePrevLifts.ts","hooks/useOneRepMaxGraph.ts","components/Widgets/OneRepMax/config.ts","components/Widgets/OneRepMax/OneRepMaxWidget.tsx","hooks/useTotalWorkouts.ts","components/Layout/UserProfileBar.tsx","hooks/useExerciseList.ts","components/Modals/ModalItem.tsx","components/Modals/AddWidgetModal.tsx","components/Layout/Buttons/Elipsis.tsx","components/Widgets/WidgetHeader.tsx","components/Modals/BarChartWidgetModal.tsx","components/Modals/LineGraphWidgetModal.tsx","components/Modals/WeightTrackerModal.tsx","components/Widgets/WidgetContainer.tsx","components/Layout/Buttons/CtaButton.tsx","components/Modals/AddMeasurementModal.tsx","hooks/useWeightGraph.ts","components/Widgets/WeightTracker/config.ts","components/Widgets/WeightTracker/WeightTrackerWidget.tsx","components/Modals/SettingsModal.tsx","screens/root/Profile.tsx","components/Lists/ListFooter.tsx","screens/root/History.tsx","hooks/useHistory.ts","navigation/LinkingConfiguration.ts","hooks/useTodaysDate.ts","screens/modals/Calendar.tsx","components/Utils/Timer.tsx","components/ActiveWorkout/ActiveWorkoutSet.tsx","hooks/usePreviousSet.ts","hooks/useId.ts","components/ActiveWorkout/ActiveWorkoutLift.tsx","components/CreateWorkout/CreateWorkout.tsx","screens/pages/ActiveWorkout.tsx","utils/ExerciseList/exerciseListToSections.ts","components/Lists/ExerciseList.tsx","screens/root/Exercises.tsx","screens/modals/AddExercises.tsx","components/Modals/ManageFolderModal.tsx","components/Modals/TemplateModal.tsx","components/Templates/TemplateCard.tsx","components/Templates/Folder.tsx","components/Modals/AddFolderModal.tsx","hooks/useTemplatesAndFolders.ts","screens/root/Start.tsx","components/Layout/Logo/Logo.tsx","components/Layout/Buttons/PrimaryButton.tsx","components/Layout/InputField.tsx","components/Auth/AuthForm.tsx","components/Auth/AuthStateSwitcher.tsx","components/Auth/SocialIcons.tsx","components/Auth/Auth.tsx","utils/Auth/getFromAsyncStorage.ts","utils/Auth/getFromLocalStorage.ts","hooks/useRememberMe.ts","components/Auth/Welcome.tsx","components/Layout/ScreenHeader.tsx","screens/pages/CreateTemplate.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf","node_modules/moment/locale sync /^/.//.*$","components/Modals/ModalWrapper.tsx","images/undraw_Powerful_re_frhr.png","images/logo.png","images/welcome-hero.png","store/WidgetsSlice.ts"],"names":["templateSlice","createSlice","name","initialState","status","folders","reducers","removeLiftFromTemplate","state","payload","folId","tempId","liftId","templates","exercises","exerciseOrder","filter","el","deleteFolder","folderId","emptyFolder","extraReducers","builder","addCase","createFolder","fulfilled","id","newFolder","title","rejected","_","createTemplate","folder_id","template_name","newTemplate","templateName","JSON","parse","map","exerciseId","exerciseName","sets","push","getUserTemplateData","templateData","folderData","folder","template","deleteTemplate","templateId","createAsyncThunk","rejectWithValue","user_id","userId","supabase","from","insert","data","error","console","log","params","stringify","message","select","eq","folder_data","folder_erorr","template_data","template_error","delete","actions","saveToAsyncStorage","key","value","AsyncStorage","removeItem","setItem","e","saveToLocalStorage","localStorage","user","userName","isLoggedIn","userSlice","reset","logout","loginWithGoogle","rememberSession","token","userSignup","session","rememberMe","pending","userLogin","Platform","OS","signInWithGoogle","userSignout","details","email","password","auth","signUp","thunkAPI","signIn","signOut","provider","weightSlice","weight","labels","values","addWeight","date","getWeight","item","dateOnly","created_at","split","moment","format","parseInt","order","ascending","limit","store","configureStore","reducer","exerciseListSlice","currentWorkoutSlice","workoutHistorySlice","widgetSlice","useAppDispatch","useDispatch","useAppSelector","useSelector","exerciseList","fetchAllExercises","history","refresh","getHistory","page","currentPage","range","ToastAlert","description","variant","maxWidth","alignSelf","flexDirection","space","flexShrink","w","alignItems","justifyContent","Icon","fontSize","fontWeight","color","px","calculateOneRepMax","arr","set","oneRepMax","reps","Math","round","createClient","workoutTitle","isActive","startTime","finishTime","totalSets","totalVolume","startWorkout","Date","toLocaleTimeString","setWorkoutTitle","updateReps","setId","updateWeight","addLift","index","liftNumber","deleteLift","indexOf","splice","addSet","setNumber","Object","keys","length","newSet","rpe","deleteSet","newState","newSetsArray","newSetsObj","fromEntries","updateSet","cancelWorkout","saveWorkout","assign","getState","workout","finished_at","toISOString","workout_name","workout_data","workout_error","lift","formattedLift","exercise_id","exercise_name","workout_id","lift_id","lift_error","formattedSets","set_error","useColorScheme","screenColorMode","useColorModeValue","screenColorModeHex","bottomNavColorMode","h1ColorMode","h2ColorMode","pTextColorMode","ctaBgColorMode","ctaBorderColorMode","ctaTextColorMode","ctaIconColorMode","elipsesColorMode","elipsesBgColorMode","avatarBgColorMode","buttonColorMode","CONFIG","backgroundGradientFrom","backgroundGradientFromOpacity","barPercentage","barRadius","decimalPlaces","propsForBackgroundLines","strokeWidth","strokeLinecap","strokeDasharray","x1","propsForLabels","Dimensions","get","width","usePreviousWorkoutDates","useState","workoutDates","setWorkoutDates","isLoading","setIsLoading","setError","useEffect","match","fetchWorkouts","useSessionFrequency","setLabels","setValues","depth","mondayDates","thisMonday","startOf","thisMondayFormatted","i","prev","day","reverse","getPreviousMondays","moments","counts","forEach","label","newMoments","reduce","acc","curr","SCREEN_WIDTH_APP","useIsApp","isApp","setIsApp","SessionFrequencyWidget","SCREEN_WIDTH","maxInValues","max","segmentCount","datasets","colors","Skeleton","height","startColor","endColor","isLoaded","yAxisLabel","yAxisSuffix","chartConfig","showBarTops","withInnerLines","segments","withCustomBarColorFromData","yAxisInterval","style","marginVertical","borderRadius","paddingRight","usePrevLifts","setData","fetchData","useOneRepMaxGraph","setIsLoaded","workouts","getArrayOfBestSetAndDate","setObj","current","bestSet","labelMoments","rawDataPoints","dataPoints","backgroundGradientTo","propsForDots","r","stroke","fill","fillShadowGradient","fillShadowGradientOpacity","bezier","OneRepMaxWidget","props","chartData","marginHorizontal","useTotalWorkouts","totalWorkouts","setTotalWorkouts","fetchTotalWorkouts","count","UserProfileBar","HStack","Avatar","size","marginY","backgroundColor","marginRight","Text","VStack","flex","pl","h","useExerciseList","dispatch","ModalItem","children","pressHandler","hasChevron","rest","Button","onPress","rightIcon","icon","faChevronRight","undefined","AddWidgetModal","step","setStep","isVisible","setIsVisible","handleChooseExerciseToTrack","handleCreateWidget","widget","type","subtitle","createWidget","ModalWrapper","header","isOpen","onClose","shadow","Modal","Body","handleCreateLineWidget","Elipsis","Pressable","paddingX","paddingY","FontAwesome","WidgetHeader","renderModalComponent","setModalIsVisible","Box","Heading","opacity","renderHeader","BarChartWidgetModal","modalIsVisible","widgetId","saveHandler","deleteWidget","Number","handleDelete","leftIcon","faXmark","LineGraphWidgetModal","WeightTrackerModal","WidgetContainer","borderWidth","borderColor","padding","overflow","my","CtaButton","isHollow","varient","textTransform","AddMeasurementModal","setWeight","test","Input","placeholder","keyboardType","rounded","onChangeText","text","leftElement","faWeightScale","marginLeft","useWeightTracker","WeightTrackerWidget","SettingsModal","logoutOnApp","handleLogout","colorScheme","Profile","navigation","weightModalIsVisible","setWeightModalIsVisible","modalIsOpen","setModalIsOpen","widgets","isWidgetRefreshing","setIsWidgetRefreshing","getWidgets","handleRefreshWidgets","handlePress","View","flexGrow","_web","maxW","mx","faRuler","faGear","faWrench","FlatList","renderItem","WIDGET_MAP","ONE_REP_MAX_EST","SESSION_FREQUENCY","WEIGHT_TRACKER","renderWidget","onRefresh","refreshing","ListFooter","Center","mt","Spinner","HistoryCard","lazy","History","setPage","useHistory","useNavigation","paddingBottom","navigate","faCalendar","initialNumToRender","keyExtractor","String","onEndReached","onEndReachedThreshold","ListFooterComponent","lifts","fallback","workoutName","workoutId","linking","prefixes","Linking","config","screens","Auth","Welcome","CreateTemplate","Root","path","Exercises","Start","useTodaysDate","today","dd","getDate","padStart","mm","getMonth","getFullYear","Calendar","historyObj","ac","a","selected","maxDate","display","markedDates","minDate","calendarWidth","Timer","secondsElapsed","setSecondsElapsed","formattedTime","setFormattedTime","myInterval","setInterval","prevState","clearInterval","secondsToFormattedTime","hours","floor","toString","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","flexDir","py","ActiveWorkoutSet","isDone","setIsDone","swipeableRef","useRef","previous","setPrevious","getPrevData","usePreviousSet","weightRef","repsRef","handleCheckSet","renderRightActions","pr","textAlign","onSwipeableOpen","close","rightThreshold","ref","zIndex","faMinus","previousString","renderPrevious","isDisabled","newwWeight","handleUpdateWeight","newwReps","handleUpdateReps","faCheck","counter","useId","prefix","ActiveWorkoutLift","renderCheck","faLock","faCheckDouble","containerStyle","p","renderHeading","mr","setList","renderSets","bg","handleAddSet","renderAddSet","CreateWorkout","goBack","useRoute","handleEndWorkout","handleSaveTemplate","exercisesArray","templateParams","renderEndWorkout","letterSpacing","handleChangeWorkoutTitle","_focus","focusOutlineColor","editable","rightElement","m","Image","source","require","alt","renderLifts","screen","ActiveWorkout","exerciseListToSections","list","toUpperCase","findIndex","ExerciseCard","ExerciseList","showExerciseDetails","setExercises","_dark","filteredExercises","includes","handleFilter","sectionList","SectionList","sections","renderSectionHeader","section","renderList","AddExercises","handleAddExercises","paddingTop","exercisesLength","buttonText","mb","renderAddExercises","ManageFolderModal","handleDeleteFolder","handleCreateTemplate","TemplateModal","renderDelete","TemplateCard","tempalteModalIsVisible","setTemplateModalIsVisible","renderExercises","exercise","Fragment","showComma","handleAddLiftsToWorkout","numberOfLines","faClock","Folder","isCollapsed","setIsCollapsed","folderModalIsOpen","setFolderModalIsOpen","faChevronDown","transform","rotate","margin","Collapse","numColumns","AddFolderModal","folderTitle","setFolderTitle","useTemplatesAndFolders","folderModalIsVisible","setFolderModalIsVisible","handlePressQuickStart","handleContinueWorkout","renderStartOrContinue","faFolder","Logo","PrimaryButton","textDark","InputField","FormControl","Label","AuthForm","SocialsComponent","setRememberMe","confirmPassword","formData","setFormData","toast","useToast","show","placement","render","handleLogin","handleSignup","renderEmailField","InputLeftElement","renderPasswordField","InputRightElement","faEye","renderConfrimPasswordField","renderRememberMe","Checkbox","onChange","renderSignUp","renderLogIn","AuthStateSwitcher","setType","handleSwitch","underline","SocialIcons","noOfLines","faGoogle","route","routeType","marginX","marginTop","marginBottom","position","resizeMode","getFromAsyncStorage","getItem","getFromLocalStorage","useRememberMe","handleMobileRememberMe","handleSignUpWithEmail","handleSignUpWithGoogle","top","left","right","startIcon","faEnvelope","Header","borderBottomWidth","borderBottomColor","showBack","faArrowLeft","renderBackButton","showRouteTitle","renderRouteTitle","ComponentRight","renderComponentRight","Navigation","NavigationContainer","LinkingConfiguration","RootNavigator","Stack","createNativeStackNavigator","AuthStack","Navigator","initialRouteName","Screen","component","BottomTabNavigator","options","headerShown","Group","screenOptions","presentation","BottomTab","createBottomTabNavigator","tabBarStyle","tabBarActiveTintColor","headerStyle","headerTitle","tabBarIcon","faUser","faPlus","faDumbbell","faClockRotateLeft","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","loadResourcesAndDataAsync","useCachedResources","NativeBaseProvider","StatusBar","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","Content","maxH","CloseButton","Footer","borderTopWidth","refreshWidgets","newWidget"],"mappings":"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","file":"static/js/app.f4bb3fde.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { supabase } from \"../supabase/supabaseClient\";\nimport { TemplateSliceInterface } from \"../types/TemplateSliceInterface\";\n\nconst initialState: TemplateSliceInterface = {\n  status: \"idle\",\n  folders: {},\n};\n\ntype TemplateNameType = string;\ntype FolderNameType = string;\ntype FolderIdType = string;\ntype TemplateIdType = string;\ntype LiftIdType = string;\n\ninterface RemoveLiftInterface {\n  folId: FolderIdType;\n  tempId: TemplateIdType;\n  liftId: LiftIdType;\n}\n\n// NOTE:\n// CREATE THIS AND SQUASH ANY ISSUES THAT COME UP\n// WITH USING THE NEW INTERFACE\n\ninterface ILiftDataWithSets {\n  exerciseId: number;\n  exerciseName: string;\n  liftId: string;\n  liftNumber: number;\n  sets: {\n    [key: string]: {\n      reps: string;\n      weight: string;\n      setNumber: number;\n    };\n  };\n}\n\ninterface CreateTemplateInterface {\n  folId: FolderIdType;\n  title: TemplateNameType;\n  params: ILiftDataWithSets[];\n  userId: string;\n}\n\ninterface CreateFolderInterface {\n  title: FolderNameType;\n  userId: string;\n}\n\nconst templateSlice = createSlice({\n  name: \"template\",\n  initialState: initialState,\n  reducers: {\n    removeLiftFromTemplate: (\n      state,\n      { payload }: PayloadAction<RemoveLiftInterface>\n    ) => {\n      const { folId, tempId, liftId } = payload;\n\n      delete state.folders[folId].templates[tempId].exercises[liftId];\n      state.folders[folId].templates[tempId].exerciseOrder.filter(\n        (el) => el === liftId\n      );\n    },\n    deleteFolder: (\n      state,\n      { payload: folderId }: PayloadAction<FolderIdType>\n    ) => {\n      delete state.folders[folderId];\n    },\n    emptyFolder: (state, { payload }) => {\n      const { folderId } = payload;\n      state.folders[folderId].templates = {};\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(createFolder.fulfilled, (state, { payload }) => {\n        const { id, title } = payload;\n\n        const newFolder = {\n          templates: {},\n          id: id,\n          name: title,\n        };\n\n        state.folders[id] = newFolder;\n      })\n      .addCase(createFolder.rejected, (state, _) => {\n        state.status = \"rejected\";\n      })\n      .addCase(createTemplate.fulfilled, (state, { payload }) => {\n        const { folder_id, template_name, tempId } = payload;\n\n        const newTemplate = {\n          exercises: {},\n          exerciseOrder: [],\n          templateName: template_name,\n          tempId: tempId,\n        };\n\n        state.folders[folder_id].templates[tempId] = newTemplate;\n\n        const { exercises } = payload;\n\n        JSON.parse(exercises).map(\n          ({ exerciseId, exerciseName, liftId }: any) => {\n            state.folders[folder_id].templates[tempId].exercises[liftId] = {\n              exerciseId,\n              exerciseName,\n              sets: {},\n            };\n\n            state.folders[folder_id].templates[tempId].exerciseOrder.push(\n              liftId\n            );\n          }\n        );\n      })\n      .addCase(createTemplate.rejected, (state, _) => {\n        state.status = \"rejected\";\n      })\n      .addCase(getUserTemplateData.fulfilled, (state, { payload }) => {\n        const { templateData, folderData } = payload;\n\n        folderData.map((folder) => {\n          state.folders[folder.id] = {\n            name: folder.title,\n            id: folder.id,\n            templates: {},\n          };\n        });\n\n        templateData.map((template) => {\n          state.folders[template.folder_id].templates[template.id] = {\n            exerciseOrder: [],\n            templateName: template.template_name,\n            tempId: template.id,\n            exercises: JSON.parse(template.exercises),\n          };\n        });\n\n        state.status = \"fulfilled\";\n      })\n      .addCase(getUserTemplateData.rejected, (state, _) => {\n        state.status = \"rejected\";\n      })\n      .addCase(deleteTemplate.fulfilled, (state, { payload }) => {\n        const { folderId, templateId } = payload;\n\n        delete state.folders[folderId].templates[templateId];\n      })\n      .addCase(deleteTemplate.rejected, (state, _) => {\n        state.status = \"rejected\";\n      });\n  },\n});\n\nexport const createFolder = createAsyncThunk(\n  \"template/createFolder\",\n  async (payload: CreateFolderInterface, { rejectWithValue }) => {\n    const { title, userId: user_id } = payload;\n    const newFolder: any = {\n      title,\n      user_id,\n    };\n    const { data, error } = await supabase.from(\"folders\").insert(newFolder);\n\n    if (error) {\n      console.log(\"ERROR\", error);\n      return rejectWithValue([]);\n    }\n\n    newFolder.id = data[0].id;\n\n    return newFolder;\n  }\n);\n\nexport const createTemplate = createAsyncThunk(\n  \"template/createTemplate\",\n  async (payload: CreateTemplateInterface, { rejectWithValue }) => {\n    const { params: exercises, folId, title, userId } = payload;\n\n    const newTemplate: any = {\n      exercises: JSON.stringify(exercises),\n      folder_id: folId,\n      template_name: title,\n      user_id: userId,\n    };\n\n    const { data, error } = await supabase\n      .from(\"templates\")\n      .insert(newTemplate);\n\n    if (error) {\n      console.error(error);\n      return rejectWithValue(error.message);\n    }\n\n    newTemplate.tempId = data[0].id;\n\n    return newTemplate;\n  }\n);\n\nexport const getUserTemplateData = createAsyncThunk(\n  \"template/getUserData\",\n  async (payload: string, { rejectWithValue }) => {\n    const { data: folder_data, error: folder_erorr } = await supabase\n      .from(\"folders\")\n      .select()\n      .eq(\"user_id\", payload);\n    const { data: template_data, error: template_error } = await supabase\n      .from(\"templates\")\n      .select()\n      .eq(\"user_id\", payload);\n\n    if (template_error || folder_erorr) {\n      console.error(template_error || folder_erorr);\n      return rejectWithValue(template_error || folder_erorr);\n    }\n\n    return { templateData: template_data, folderData: folder_data };\n  }\n);\n\nexport const deleteTemplate = createAsyncThunk(\n  \"template/deleteWidget\",\n  async (payload: string, { rejectWithValue }) => {\n    const { data, error } = await supabase\n      .from(\"templates\")\n      .delete()\n      .eq(\"id\", payload);\n\n    if (error) {\n      return rejectWithValue(error);\n    }\n\n    console.log(\"data\", data);\n\n    return { folderId: data[0].folder_id, templateId: data[0].id };\n  }\n);\n\nexport const { deleteFolder, emptyFolder } = templateSlice.actions;\nexport default templateSlice.reducer;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst saveToAsyncStorage = async (key: string, value: any) => {\n  try {\n    AsyncStorage.removeItem(key);\n    AsyncStorage.setItem(key, JSON.stringify(value));\n  } catch (e) {\n    console.error(\"ERROR SAVING TOKEN FOR APP \", e);\n  }\n};\n\nexport default saveToAsyncStorage;\n","const saveToLocalStorage = (key: string, value: any) => {\n  localStorage.removeItem(key);\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport default saveToLocalStorage;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { Platform } from \"react-native\";\nimport { supabase } from \"../supabase/supabaseClient\";\nimport saveToAsyncStorage from \"../utils/Auth/saveToAsyncStorage\";\nimport saveToLocalStorage from \"../utils/Auth/saveToLocalStorage\";\n\ninterface InitialStateInterface {\n  user: {\n    userName: string;\n    isLoggedIn: boolean;\n    userId: string;\n  };\n  status: \"fulfilled\" | \"pending\" | \"rejected\" | \"idle\";\n}\n\nconst initialState: InitialStateInterface = {\n  user: {\n    userName: \"\",\n    isLoggedIn: false,\n    userId: \"\",\n  },\n  status: \"idle\",\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    logout: (state) => {\n      state.user.isLoggedIn = false;\n      state.user.userId = \"\";\n      state.status = \"idle\";\n    },\n    loginWithGoogle: (state, { payload }) => {\n      state.user.isLoggedIn = true;\n      state.user.userId = payload.user.id;\n      state.status = \"fulfilled\";\n    },\n    rememberSession: (state, { payload }) => {\n      const token = JSON.parse(payload);\n\n      state.user.isLoggedIn = true;\n      state.user.userId = token.user.id;\n      state.status = \"fulfilled\";\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(userSignup.fulfilled, (state, { payload }) => {\n        const { user, session, rememberMe } = payload;\n\n        state.user.isLoggedIn = true;\n        state.user.userId = user!.id;\n        state.status = \"fulfilled\";\n      })\n      .addCase(userSignup.rejected, (state, _) => {\n        state.status = \"rejected\";\n      })\n      .addCase(userSignup.pending, (state, _) => {\n        state.status = \"pending\";\n      })\n      .addCase(userLogin.fulfilled, (state, { payload }) => {\n        const { user, session, rememberMe } = payload;\n\n        const platform = Platform\n\n        if (platform.OS === \"web\") {\n          saveToLocalStorage(\"JACKED__SESSION_TOKEN\", session);\n        } else {\n          saveToAsyncStorage(\"JACKED__SESSION_TOKEN\", session);\n        }\n\n        state.user.isLoggedIn = true;\n        state.user.userId = user!.id;\n        state.status = \"fulfilled\";\n      })\n      .addCase(signInWithGoogle.fulfilled, (state, { payload }) => {\n        // state.status = \"fulfilled\";\n        // state.user.isLoggedIn = true;\n        // state.user.userId = payload.id;\n      })\n      .addCase(userLogin.pending, (state) => {\n        state.status = \"pending\";\n      })\n      .addCase(userLogin.rejected, (state) => {\n        state.status = \"rejected\";\n      })\n      .addCase(userSignout.rejected, (state) => {\n        state.status = \"rejected\";\n      })\n      .addCase(userSignout.fulfilled, (state) => {\n        state.status = \"fulfilled\";\n        state.user = initialState.user;\n      })\n      .addCase(userSignout.pending, (state) => {\n        state.status = \"pending\";\n      });\n  },\n});\n\ninterface AuthPayload {\n  email: string;\n  password: string;\n  rememberMe: \"TRUE\" | \"FALSE\";\n}\n\nexport const userSignup = createAsyncThunk(\n  \"user/userSignup\",\n  async (details: AuthPayload, { rejectWithValue }) => {\n    const { email, password, rememberMe } = details;\n    const { user, session, error } = await supabase.auth.signUp({\n      email: email,\n      password: password,\n    });\n\n    if (error) return rejectWithValue(error.message);\n\n    const data = { user, session, rememberMe };\n\n    return data;\n  }\n);\n\nexport const userLogin = createAsyncThunk(\n  \"user/userLogin\",\n  async (details: AuthPayload, thunkAPI) => {\n    const { email, password, rememberMe } = details;\n    const { user, session, error } = await supabase.auth.signIn({\n      email: email,\n      password: password,\n    });\n\n    if (error) return thunkAPI.rejectWithValue(error);\n\n    const data = { user, session, rememberMe };\n    return data;\n  }\n);\n\nexport const userSignout = createAsyncThunk(\n  \"user/userSignout\",\n  async (_, { rejectWithValue }) => {\n    const { error } = await supabase.auth.signOut();\n\n    if (error) return rejectWithValue(error);\n  }\n);\n\nexport const signInWithGoogle = createAsyncThunk(\n  \"user/signInWithGoogle\",\n  async (_, { rejectWithValue }) => {\n    const { user, session, error } = await supabase.auth.signIn({\n      provider: \"google\",\n    });\n\n    if (!user) return rejectWithValue({});\n\n    return user;\n  }\n);\n\nexport const { reset, rememberSession, logout } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport moment from \"moment\";\nimport { supabase } from \"../supabase/supabaseClient\";\n\ninterface IWeight {\n    labels: string[]\n    values: number[]\n}\n\ninterface InitialStateInterface {\n    weight: IWeight;\n    status: \"fulfilled\" | \"pending\" | \"rejected\" | \"idle\" | \"refreshing\";\n}\n\nconst initialState: InitialStateInterface = {\n    weight: {\n        labels: [],\n        values: []\n    },\n    status: \"idle\",\n};\n\nconst weightSlice = createSlice({\n    name: \"weightSlice\",\n    initialState: initialState,\n    reducers: {\n        addWeight: (state, { payload }) => {\n            state.weight.labels.push(payload.date)\n            state.weight.values.push(payload.weight)\n\n            state.status = \"refreshing\"\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(getWeight.fulfilled, (state, payload) => {\n                const { payload: data } = payload\n\n                const labels = data.map((item: any) => {\n                    const dateOnly = item.created_at.split(\" \")[0];\n                    return moment(dateOnly).format(\"DD/MM\");\n                })\n\n                const values = data.map(({ weight }: { weight: string }) => parseInt(weight))\n\n                state.weight.labels = labels\n                state.weight.values = values\n                state.status = \"fulfilled\"\n            })\n    },\n});\n\ninterface getWeightProps {\n    userId: string;\n}\n\nexport const getWeight = createAsyncThunk(\n    \"weightSlice/getWeight\",\n    async (payload: getWeightProps, { rejectWithValue }) => {\n        const { data, error } = await supabase\n            .from(\"weight\")\n            .select()\n            .order(\"id\", { ascending: false })\n            .eq(\"user_id\", payload.userId)\n            .limit(7)\n\n        if (error) {\n            console.error(error.message);\n            return rejectWithValue(error.message)\n        }\n\n        return data;\n    }\n);\n\ninterface IAddWeight {\n    weight: string;\n    userId: string;\n}\n\nexport const addWeight = createAsyncThunk(\n    \"weightSlice/addWeight\",\n    async (payload: IAddWeight, { rejectWithValue }) => {\n        const { data, error } = await supabase.from(\"weight\").insert({\n            weight: payload.weight,\n            user_id: payload.userId\n        })\n\n        if (error) {\n            console.error(error)\n            return rejectWithValue(error.message)\n        }\n\n        const date = data[0].created_at\n        const formattedData = {\n            weight: payload.weight,\n            date: date\n        }\n\n        return formattedData\n    }\n)\n\nexport default weightSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport currentWorkoutSlice from \"./currentWorkoutSlice\";\nimport exerciseListSlice from \"./exerciseList\";\nimport userSlice from \"./userSlice\";\nimport workoutHistorySlice from \"./workoutHistorySlice\";\nimport templateSlice from \"./templateSlice\";\nimport widgetSlice from \"./WidgetsSlice\";\nimport weightSlice from \"./weightSlice\";\n\nconst store = configureStore({\n  reducer: {\n    exerciseListSlice,\n    currentWorkoutSlice,\n    userSlice,\n    workoutHistorySlice,\n    templateSlice,\n    widgetSlice,\n    weightSlice\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default store;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport ExerciseInterface from \"../types/ExerciseInterface\";\nimport { supabase } from \"../supabase/supabaseClient\";\n\ninterface InitialStateInterface {\n  status: \"fulfilled\" | \"pending\" | \"rejected\" | \"idle\";\n  exerciseList: ExerciseInterface[];\n}\n\nconst initialState: InitialStateInterface = {\n  status: \"idle\",\n  exerciseList: [],\n};\n\nconst exerciseListSlice = createSlice({\n  name: \"exercise_list\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchAllExercises.fulfilled, (state, { payload }) => {\n      state.status = \"fulfilled\";\n      state.exerciseList = payload;\n    }),\n      builder.addCase(fetchAllExercises.rejected, (state, _) => {\n        state.status = \"rejected\";\n      }),\n      builder.addCase(fetchAllExercises.pending, (state, _) => {\n        state.status = \"pending\";\n      });\n  },\n});\n\nexport const fetchAllExercises = createAsyncThunk(\n  \"exercise_list/getAllExercises\",\n  async () => {\n    const { data, error } = await supabase\n      .from(\"exercises\")\n      .select()\n      .order(\"exercise_name\", { ascending: true });\n\n    if (error) return [];\n    return data;\n  }\n);\n\nexport default exerciseListSlice.reducer;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { supabase } from \"../supabase/supabaseClient\";\nimport { workoutHistoryType } from \"../types/WorkoutHistoryInterface\";\n\ninterface InitialStateInterface {\n  history: workoutHistoryType;\n  status: \"fulfilled\" | \"pending\" | \"rejected\" | \"idle\";\n}\n\nconst initialState: InitialStateInterface = {\n  history: [],\n  status: \"idle\",\n};\n\nconst workoutHistorySlice = createSlice({\n  name: \"workoutHistorySlice\",\n  initialState: initialState,\n  reducers: {\n    refresh: (state) => {\n      state.history = []\n      state.status = \"idle\";\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHistory.fulfilled, (state, { payload }) => {\n        if (typeof payload === \"object\") {\n          payload.map((el) => (state.history = [...state.history, el]));\n        }\n        state.status = \"fulfilled\";\n      })\n      .addCase(getHistory.rejected, (state) => {\n        state.status = \"rejected\";\n      })\n      .addCase(getHistory.pending, (state) => {\n        state.status = \"pending\";\n      });\n  },\n});\n\ninterface getHistoryProps {\n  userId: string;\n  page: number;\n}\n\nexport const getHistory = createAsyncThunk(\n  \"workoutHistorySlice/getHistory\",\n  async (payload: getHistoryProps) => {\n    const { userId, page } = payload\n\n    const currentPage = page - 1\n\n    const { data, error } = await supabase\n      .from(\"workouts\")\n      .select(\n        `id, workout_name, date, lifts (exercise_name, set (weight, reps))`\n      )\n      .order(\"id\", { ascending: false })\n      .eq(\"user_id\", userId)\n      .range(currentPage * 10, page * 10)\n      .limit(10);\n\n    if (error) return console.error(error);\n    return data as workoutHistoryType;\n  }\n);\n\nexport const { refresh } = workoutHistorySlice.actions;\n\nexport default workoutHistorySlice.reducer;\n","import { Alert, VStack, HStack, Text, useToast, Center } from \"native-base\";\n\ninterface IToastAlert {\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n  title: string;\n  description: string;\n  variant: \"solid\" | \"subtle\" | \"outline\";\n}\n\nconst ToastAlert = ({ status, title, description, variant }: IToastAlert) => {\n  return (\n    <Center>\n      <Alert\n        maxWidth=\"100%\"\n        alignSelf=\"center\"\n        flexDirection=\"row\"\n        status={status ? status : \"info\"}\n        variant={variant}\n      >\n        <VStack space={1} flexShrink={1} w=\"100%\">\n          <HStack\n            flexShrink={1}\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <HStack space={2} flexShrink={1} alignItems=\"center\">\n              <Alert.Icon />\n              <Text\n                fontSize=\"md\"\n                fontWeight=\"medium\"\n                flexShrink={1}\n                color={\n                  variant === \"solid\"\n                    ? \"lightText\"\n                    : variant !== \"outline\"\n                    ? \"darkText\"\n                    : null\n                }\n              >\n                {title}\n              </Text>\n            </HStack>\n          </HStack>\n          <Text\n            px=\"6\"\n            color={\n              variant === \"solid\"\n                ? \"lightText\"\n                : variant !== \"outline\"\n                ? \"darkText\"\n                : null\n            }\n          >\n            {description}\n          </Text>\n        </VStack>\n      </Alert>\n    </Center>\n  );\n};\n\nexport default ToastAlert;\n","interface calculateOneRepMaxProps {\n    weight: string;\n    reps: string;\n}\n\nconst calculateOneRepMax = (arr: Array<calculateOneRepMaxProps>): number[] => { \n    return arr.map((set) => {\n        if (!set) return 0\n        const weight = parseInt(set.weight)\n        const reps = parseInt(set.reps)\n        const oneRepMax = weight * (36 / (37 - reps))\n        return Math.round(oneRepMax)\n    })\n }\n\nexport default calculateOneRepMax\n\n// NOTE: \n// HOW TO CALCULATE 1 REP MAX\n// Brzycki formula: Weight × (36 / (37 – number of reps))\n// Epley formula: Weight × (1 + (0.0333 × number of reps))\n// Lombardi formula: Weight × (number of reps ^ 0.1)\n// O'Conner formula: Weight × (1 + (0.025 × number of reps))","import { createClient } from \"@supabase/supabase-js\";\n\nexport const supabase = createClient(\n  \"https://getaikckzckdeufnubby.supabase.co\",\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdldGFpa2NremNrZGV1Zm51YmJ5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2NjQyNzg2MDUsImV4cCI6MTk3OTg1NDYwNX0.g0ghjdTbkbHwU3Q-82RE8ohVYWMttEOLdUw8oSR8GMY\"\n);\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { supabase } from \"../supabase/supabaseClient\";\nimport CurrentWorkoutInterface, {\n  SetInterface,\n} from \"../types/CurrentWorkoutInterface\";\n\nconst initialState: CurrentWorkoutInterface = {\n  workoutTitle: \"\",\n  isActive: false,\n  exercises: {},\n  exerciseOrder: [],\n  startTime: \"\",\n  finishTime: \"\",\n  totalSets: 0,\n  totalVolume: 0,\n  status: \"idle\",\n};\n\nconst currentWorkoutSlice = createSlice({\n  name: \"current_workout\",\n  initialState: initialState,\n  reducers: {\n    startWorkout: (state, _) => {\n      const startTime = new Date().toLocaleTimeString();\n      state.startTime = startTime;\n      state.isActive = true;\n    },\n    setWorkoutTitle: (state, { payload }: { payload: setWorkoutTitleType }) => {\n      state.workoutTitle = payload;\n    },\n    updateReps: (state, { payload }: { payload: IUpdateReps }) => {\n      const { liftId, setId, reps } = payload;\n\n      state.exercises[liftId].sets[setId].reps = reps;\n    },\n    updateWeight: (state, { payload }: { payload: IUpdateWeight }) => {\n      const { liftId, setId, weight } = payload;\n      \n      state.exercises[liftId].sets[setId].weight = weight;\n    },\n    addLift: (state, { payload }: { payload: addLiftProps[] }) => {\n      payload.map((el, index) => {\n        const { exerciseId, exerciseName, liftId, sets = {} } = el;\n        state.exercises[liftId] = {\n          exerciseId,\n          exerciseName,\n          sets,\n          liftNumber: index,\n          liftId,\n        };\n\n        state.exerciseOrder.push(liftId);\n      });\n    },\n    deleteLift: (state, { payload }: { payload: deleteLiftProps }) => {\n      const { liftId } = payload;\n      delete state.exercises[liftId];\n      const index = state.exerciseOrder.indexOf(liftId);\n      state.exerciseOrder.splice(index, 1);\n    },\n    addSet: (state, { payload }: { payload: addSetProps }) => {\n      const { liftId, setId } = payload;\n\n      const setNumber = Object.keys(state.exercises[liftId].sets).length + 1;\n\n      const newSet: SetInterface = {\n        [setId]: {\n          weight: \"0\",\n          reps: \"0\",\n          rpe: 0,\n          setNumber: setNumber,\n          setId,\n        },\n      };\n\n      state.exercises[liftId].sets[setId] = newSet[setId];\n      state.exerciseOrder.push(liftId);\n    },\n    deleteSet: (state, { payload }: { payload: deleteSetProps }) => {\n      const { setId, liftId } = payload;\n      const newState = { ...state };\n      delete newState.exercises[liftId].sets[setId];\n      const newSetsArray = Object.values(newState.exercises[liftId].sets).map(\n        (el, index) => {\n          return [el.setId, { ...el, setNumber: index + 1 }];\n        }\n      );\n      const newSetsObj = Object.fromEntries(newSetsArray);\n      newState.exercises[liftId].sets = newSetsObj;\n    },\n    updateSet: (state, { payload }: { payload: updateSetProps }) => {\n      const { liftId, setId, newSet } = payload;\n      state.exercises[liftId].sets[setId] = { ...newSet };\n    },\n    cancelWorkout: (state) => (state = initialState),\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(saveWorkout.fulfilled, (state, payload) => {\n        Object.assign(state, initialState);\n        state.status = \"success\";\n      })\n      .addCase(saveWorkout.pending, (state, payload) => {\n        state.status = \"pending\";\n      })\n      .addCase(saveWorkout.rejected, (state, payload) => {\n        state.status = \"error\";\n      });\n  },\n});\n\nexport const saveWorkout = createAsyncThunk(\n  \"current_workout/saveWorkout\",\n  async (_, { getState }) => {\n    const state: any = getState();\n    const workout = {\n      finished_at: null,\n      date: new Date().toISOString().split(\"T\")[0],\n      user_id: state.userSlice.user.userId,\n      workout_name: state.currentWorkoutSlice.workoutTitle,\n    };\n\n    const { data: workout_data, error: workout_error } = await supabase\n      .from(\"workouts\")\n      .insert(workout)\n      .select(\"id\");\n\n    if (workout_error) return console.error(workout_error);\n\n    const { id } = workout_data[0];\n\n    //REVIEW: WE CAN DO THIS IN ONE CALL BY CREATING A FUNCTION ON SUPABASE\n    const liftsArray = Object.values(state.currentWorkoutSlice.exercises);\n    liftsArray.map(async (lift: any) => {\n      const formattedLift = {\n        exercise_id: lift.exerciseId,\n        exercise_name: lift.exerciseName,\n        user_id: state.userSlice.user.userId,\n        workout_id: id,\n      };\n\n      const { data: lift_id, error: lift_error } = await supabase\n        .from(\"lifts\")\n        .insert(formattedLift)\n        .select(\"lift_id\");\n\n      if (lift_error) return console.error(lift_error);\n\n      const sets = Object.values(lift.sets);\n      const formattedSets = sets.map((set: any) => {\n        return {\n          weight: set.weight,\n          reps: set.reps,\n          rpe: set.rpe,\n          setNumber: set.setNumber,\n          liftId: lift_id[0].lift_id,\n          exerciseId: lift.exerciseId,\n        };\n      });\n\n      const { data: set_id, error: set_error } = await supabase\n        .from(\"set\")\n        .insert(formattedSets)\n        .select(\"id\");\n\n      if (set_error) return console.error(set_error);\n    });\n  }\n);\n\ntype setWorkoutTitleType = string;\n\ninterface deleteSetProps {\n  liftId: string;\n  setId: string;\n  setNumber: number;\n}\n\ninterface addSetProps {\n  liftId: string;\n  setId: string;\n}\n\ninterface updateSetProps {\n  liftId: string;\n  setId: string;\n  newSet: {\n    weight: string;\n    reps: string;\n    rpe: number;\n    setNumber: number;\n    setId: string;\n  };\n}\n\ninterface addLiftProps {\n  exerciseId: number;\n  exerciseName: string;\n  userId: string;\n  liftId: string;\n  sets: {\n    [key: string]: {\n      weight: string;\n      reps: string;\n      setNumber: number;\n      rpe: number;\n      setId: string;\n    };\n  };\n}\n\ninterface startWorkoutProps {\n  userId: string;\n}\n\ninterface deleteLiftProps {\n  liftId: string;\n}\n\ninterface IUpdateReps {\n  liftId: string;\n  setId: string;\n  reps: string;\n}\ninterface IUpdateWeight {\n  liftId: string;\n  setId: string;\n  weight: string;\n}\n\nexport const {\n  cancelWorkout,\n  setWorkoutTitle,\n  startWorkout,\n  addLift,\n  addSet,\n  deleteSet,\n  updateSet,\n  deleteLift,\n  updateReps,\n  updateWeight,\n} = currentWorkoutSlice.actions;\n\nexport default currentWorkoutSlice.reducer;\n","import { useColorModeValue } from \"native-base\";\n\nexport default function useColorScheme() {\n  // SCREEN\n  const screenColorMode = useColorModeValue(\"coolGray.50\", \"coolGray.800\");\n  const screenColorModeHex = useColorModeValue(\"#f9fafb\", \"#1f2937\");\n\n  // BOTTOM NAV\n  const bottomNavColorMode = useColorModeValue(\"#0369a1\", \"#f9fafb\");\n\n  // TEXT\n  const h1ColorMode = useColorModeValue(\"coolGray.700\", \"coolGray.50\");\n  const h2ColorMode = useColorModeValue(\"coolGray.600\", \"coolGray.100\");\n  const pTextColorMode = useColorModeValue(\"coolGray.600\", \"coolGray.50\");\n\n  // CTA WITH ICONS\n  const ctaBgColorMode = useColorModeValue(\"info.100\", \"info.700\");\n  const ctaBorderColorMode = useColorModeValue(\"info.500\", \"info.100\");\n  const ctaTextColorMode = useColorModeValue(\"info.600\", \"info.100\");\n  const ctaIconColorMode = useColorModeValue(\"#0284c7\",\"#bce3f5\")\n\n  // ELIPSES COLOR\n  const elipsesColorMode = useColorModeValue(\"#0369a1\", \"#e0f2fe\");\n  const elipsesBgColorMode = useColorModeValue(\"#e0f2fe\", \"#0369a1\");\n\n  //AVATAR BG COLOR MODE\n  const avatarBgColorMode = useColorModeValue(\"info.500\", \"info.700\");\n\n  // BUTTON COLOR\n  const buttonColorMode = useColorModeValue(\"info.400\", \"info.700\");\n\n  return {\n    screenColorMode,\n    h1ColorMode,\n    ctaBgColorMode,\n    ctaBorderColorMode,\n    ctaTextColorMode,\n    ctaIconColorMode,\n    pTextColorMode,\n    screenColorModeHex,\n    elipsesColorMode,\n    elipsesBgColorMode,\n    avatarBgColorMode,\n    bottomNavColorMode,\n    h2ColorMode,\n    buttonColorMode\n  };\n}\n","import { Dimensions } from \"react-native\";\n\nconst CONFIG = {\n  backgroundGradientFrom: \"#FFFF\",\n  backgroundGradientFromOpacity: 0,\n  color: () => \"#808080\",\n  barPercentage: 0.6,\n  barRadius: 3,\n  decimalPlaces: 0,\n  propsForBackgroundLines: {\n    strokeWidth: \"0.3\",\n    strokeLinecap: \"round\",\n    strokeDasharray: \"0, 0\",\n    x1: 20,\n  },\n  propsForLabels: {\n    // fontFamily: \"sans-serif\",\n  },\n};\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\n\nexport { CONFIG, SCREEN_WIDTH };\n","import { useEffect, useState } from \"react\";\nimport { supabase } from \"../supabase/supabaseClient\";\n\nconst usePreviousWorkoutDates = (userId: string) => {\n  const [workoutDates, setWorkoutDates] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchWorkouts = async () => {\n      try {\n        const { data, error } = await supabase\n          .from(\"workouts\")\n          .select(\"date\")\n          .match({ user_id: userId })\n          .limit(30)\n          .order(\"date\", { ascending: false })\n\n        if (error) {\n          console.error(error);\n          setError(true);\n          setIsLoading(false);\n          return;\n        }\n\n        setWorkoutDates(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setError(true);\n      }\n    };\n\n    fetchWorkouts();\n  }, []);\n\n  return { workoutDates, isLoading, error }\n};\n\nexport default usePreviousWorkoutDates;\n","import moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { useAppSelector } from \"../store\";\nimport getPreviousMondays from \"../utils/Date/getPreviousMonday\";\nimport usePreviousWorkoutDates from \"./usePreviousWorkoutDates\";\n\nconst useSessionFrequency = () => {\n  const [labels, setLabels] = useState<string[]>([]);\n  const [values, setValues] = useState<number[]>([]);\n\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n  const { workoutDates, isLoading } = usePreviousWorkoutDates(userId);\n\n  useEffect(() => {\n    const labels = getPreviousMondays(6);\n    const moments = workoutDates.map((el) => {\n      return moment(el.date).startOf(\"week\").format(\"DD/MM\");\n    });\n\n    const counts: {\n      [key: string]: number;\n    } = {};\n\n    labels.forEach((label) => (counts[label] = 0));\n\n    const newMoments: {\n      [key: string]: number;\n    } = moments.reduce((acc: any, curr) => {\n      return acc[curr] >= 0 ? ++acc[curr] : null, acc;\n    }, counts);\n\n    setLabels(Object.keys(newMoments));\n    setValues(Object.values(newMoments));\n  }, [isLoading]);\n\n  return { labels, values, isLoading };\n};\n\nexport default useSessionFrequency;\n","import moment from \"moment\";\n\nexport default function getPreviousMondays(depth = 5): string[] {\n    const mondayDates = []\n    const thisMonday = moment().startOf(\"week\")\n    const thisMondayFormatted = thisMonday.format(\"DD/MM\")\n\n    mondayDates.push(thisMondayFormatted)\n\n    for (let i = 0; i < depth; i++) {\n        const prev = thisMonday.day(-7)\n        mondayDates.push(prev.format(\"DD/MM\"))\n    }\n\n    // [\"27-11-2022\", \"20-11-2022\", \"13-11-2022\", \"06-11-2022\", \"30-10-2022\", \"23-10-2022\"]\n    return mondayDates.reverse()\n}","import { Dimensions } from \"react-native\";\n\nconst SCREEN_WIDTH_APP = Dimensions.get(\"window\").width;\nconst SCREEN_WIDTH_WEB = 500;\n\nexport { SCREEN_WIDTH_APP, SCREEN_WIDTH_WEB }","import { useEffect, useState } from \"react\";\nimport { Platform } from \"react-native\";\n\nconst useIsApp = () => {\n  const [isApp, setIsApp] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (Platform.OS === \"web\") {\n      setIsApp(false);\n    } else if (Platform.OS === \"android\") {\n      setIsApp(true);\n    } else if (Platform.OS === \"ios\") {\n      setIsApp(true);\n    }\n  }, []);\n\n  return isApp;\n};\n\nexport default useIsApp;\n","import { BarChart } from \"react-native-chart-kit\";\nimport { CONFIG, SCREEN_WIDTH } from \"./config\";\nimport useSessionFrequency from \"../../../hooks/useSessionFrequency\";\nimport { SCREEN_WIDTH_APP, SCREEN_WIDTH_WEB } from \"../ScreenWidth\";\nimport useIsApp from \"../../../hooks/useIsApp\";\nimport { Skeleton } from \"native-base\";\n\nconst SessionFrequencyWidget: React.FC = () => {\n  const { labels, values, isLoading } = useSessionFrequency();\n\n  const isApp = useIsApp();\n\n  const SCREEN_WIDTH = isApp ? SCREEN_WIDTH_APP : SCREEN_WIDTH_WEB;\n\n  const maxInValues = Math.max(...values);\n  const segmentCount = maxInValues < 4 ? maxInValues : 4;\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        data: values,\n        colors: [\n          (opacity = 1) => `#702963`,\n          (opacity = 1) => `#702963`,\n          (opacity = 1) => `#702963`,\n          (opacity = 1) => `#702963`,\n          (opacity = 1) => `#702963`,\n          (opacity = 1) => `#702963`,\n          (opacity = 1) => `#702963`,\n        ],\n      },\n    ],\n  };\n\n  return (\n    <Skeleton\n      height={160}\n      w={\"full\"}\n      startColor={\"gray.50\"}\n      endColor={\"gray.100\"}\n      isLoaded={!isLoading}\n    >\n      <BarChart\n        yAxisLabel=\"\"\n        yAxisSuffix=\"\"\n        data={data}\n        width={SCREEN_WIDTH - 49}\n        height={160}\n        chartConfig={CONFIG}\n        showBarTops={false}\n        withInnerLines={true}\n        segments={segmentCount}\n        withCustomBarColorFromData={true}\n        yAxisInterval={1}\n        style={{\n          marginVertical: 8,\n          borderRadius: 16,\n          paddingRight: 25,\n        }}\n      />\n    </Skeleton>\n  );\n};\n\nexport default SessionFrequencyWidget;\n","import { useEffect, useState } from \"react\"\nimport { supabase } from \"../supabase/supabaseClient\";\n\ninterface props {\n    userId: string;\n    limit: number;\n    exerciseId: number;\n}\n\nconst usePrevLifts = ({ userId, limit, exerciseId }: props) => {\n    const [isLoading, setIsLoading] = useState(true)\n    const [error, setError] = useState(false)\n    const [data, setData] = useState<any[]>([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const { data, error } = await supabase\n                    .from(\"lifts\")\n                    .select(`exercise_id, exercise_name, lift_id, user_id, set (weight, reps), workouts (id, date)`)\n                    .match({ user_id: userId, exercise_id: exerciseId })\n                    .order(`lift_id`, { ascending: false })\n                    .limit(limit)\n\n                if (error) {\n                    console.error(error);\n                }\n\n                data && setData(data)\n                setIsLoading(false)\n            } catch (error) {\n                console.error(error)\n                setError(true)\n                setIsLoading(false)\n            }\n        }\n\n        fetchData()\n    }, [])\n\n    return { data, error, isLoading }\n}\n\nexport default usePrevLifts","import moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAppSelector } from \"../store\";\nimport calculateOneRepMax from \"../utils/Workouts/calculateOneRepMax\";\nimport usePrevLifts from \"./usePrevLifts\";\n\nconst useOneRepMaxGraph = ({ exerciseId }: { exerciseId: number }) => {\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\n  const [labels, setLabels] = useState<string[]>([]);\n  const [values, setValues] = useState<number[]>([]);\n\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n\n  const { data, isLoading, error } = usePrevLifts({\n    userId,\n    limit: 7,\n    exerciseId,\n  });\n\n  useEffect(() => {\n    if (isLoading || error) return;\n\n    const set = data?.map((workout) => {\n      return {\n        sets: workout.set,\n        date: workout.workouts.date,\n      };\n    });\n\n    // getting array of the best set and date\n    const getArrayOfBestSetAndDate = (setObj: any) => {\n      return setObj.map((setItem: any) => {\n        const { sets, date } = setItem;\n\n        return sets.reduce((prev: any, current: any) => {\n          return prev.weight * prev.reps > current.weight * prev.reps\n            ? prev\n            : { bestSet: current, date };\n        }, {})\n      });\n    };\n\n    // getting array of the dates // labels\n    const labelsRaw = getArrayOfBestSetAndDate(set).map(\n      (item: any) => item.date\n    ).reverse();\n    const labelMoments = labelsRaw.map((label: any) =>\n      moment(label).format(\"DD/MM\")\n    );\n\n    // getting array of the datapoints\n    const rawDataPoints = getArrayOfBestSetAndDate(set).reverse().map(\n      (item: any) => item.bestSet\n    )\n    const dataPoints = calculateOneRepMax(rawDataPoints);\n\n    setValues(dataPoints);\n    setLabels(labelMoments);\n    setIsLoaded(true);\n  }, [data, isLoading]);\n\n  return { labels, values, isLoaded };\n};\n\nexport default useOneRepMaxGraph;\n","import { Dimensions } from \"react-native\";\n\nconst CONFIG = {\n    backgroundGradientFrom: \"#FFFFFF\",\n    backgroundGradientTo: \"#FFFFFF\",\n    color: () => \"#808080\",\n    decimalPlaces: 1,\n    propsForDots: {\n        r: \"3\",\n        strokeWidth: \"2\",\n        stroke: \"#7851a9\",\n        fill: \"transparent\",\n    },\n    propsForBackgroundLines: {\n        strokeWidth: \"0.3\",\n        strokeLinecap: \"round\",\n        strokeDasharray: \"0, 0\",\n    },\n    propsForLabels: {\n        // fontFamily: \"sans-serif\",\n    },\n    fillShadowGradient: \"#FFFFFF\",\n    fillShadowGradientOpacity: 0,\n    bezier: true,\n};\n\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\n\nexport { CONFIG, SCREEN_WIDTH }","import { Skeleton } from \"native-base\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport useIsApp from \"../../../hooks/useIsApp\";\nimport useOneRepMaxGraph from \"../../../hooks/useOneRepMaxGraph\";\nimport { SCREEN_WIDTH_APP, SCREEN_WIDTH_WEB } from \"../ScreenWidth\";\nimport { CONFIG, SCREEN_WIDTH } from \"./config\";\n\ninterface ILineProps {\n  exerciseId: number;\n}\n\nconst OneRepMaxWidget: React.FC<ILineProps> = (props) => {\n  const { exerciseId } = props;\n  const { labels, values, isLoaded } = useOneRepMaxGraph({ exerciseId });\n  const isApp = useIsApp();\n\n  const SCREEN_WIDTH = isApp ? SCREEN_WIDTH_APP : SCREEN_WIDTH_WEB;\n\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        data: values,\n        color: (_: any) => `rgba(90, 34, 139, 0.3)`,\n      },\n    ],\n  };\n\n  return (\n    <Skeleton\n      height={160}\n      w={\"full\"}\n      startColor={\"gray.50\"}\n      endColor={\"gray.100\"}\n      isLoaded={isLoaded}\n    >\n      <LineChart\n        data={chartData}\n        width={SCREEN_WIDTH}\n        height={160}\n        yAxisLabel=\"\"\n        chartConfig={CONFIG}\n        yAxisSuffix=\"kg\"\n        withInnerLines={true}\n        bezier\n        style={{\n          marginVertical: 8,\n          marginHorizontal: -10,\n          borderRadius: 16,\n        }}\n      />\n    </Skeleton>\n  );\n};\n\nexport default OneRepMaxWidget;\n","import { useEffect, useState } from \"react\"\nimport { useAppSelector } from \"../store\"\nimport { supabase } from \"../supabase/supabaseClient\"\n\nconst useTotalWorkouts = () => {\n    const [totalWorkouts, setTotalWorkouts] = useState<number | null>(null)\n    const [error, setError] = useState<string>(\"\")\n    const [isLoading, setIsLoading] = useState<boolean>(false)\n\n    const { userId } = useAppSelector((state) => state.userSlice.user)\n\n    const fetchTotalWorkouts = async () => {\n        setIsLoading(true)\n\n        try {\n            const { data, count, error } = await supabase\n                .from(\"workouts\")\n                .select(\"*\", { count: \"exact\" })\n                .eq(\"user_id\", userId)\n\n            if (error) {\n                setError(error.message)\n                setIsLoading(false)\n                return\n            }\n\n            setTotalWorkouts(count)\n            setIsLoading(false)\n        } catch (e) {\n            setError(e.message)\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetchTotalWorkouts()\n    }, [])\n\n    return { isLoading, error, totalWorkouts }\n}\n\nexport default useTotalWorkouts;","import { Avatar, HStack, Skeleton, Text, VStack } from \"native-base\";\nimport useColorScheme from \"../../hooks/useColorScheme\";\nimport useTotalWorkouts from \"../../hooks/useTotalWorkouts\";\n\nconst UserProfileBar = () => {\n  \n\n  const { h1ColorMode } = useColorScheme();\n\n  const { avatarBgColorMode } = useColorScheme();\n  const { totalWorkouts, isLoading } = useTotalWorkouts();\n\n  \n\n  const renderInitials = () => (\n    // NOTE:\n    // also need to update the name here\n    <Avatar\n      size={\"lg\"}\n      marginY={3}\n      backgroundColor={avatarBgColorMode}\n      marginRight={\"3\"}\n    >\n      <Text color={\"info.50\"} fontSize={\"lg\"} fontWeight={\"bold\"}>\n        AM\n      </Text>\n    </Avatar>\n  );\n\n  const renderDetails = () => {\n    // NOTE:\n    // need to dynamically load the name too\n    return (\n      <VStack flex={1} pl={2}>\n        <Text fontSize=\"md\" fontWeight=\"semibold\" color={h1ColorMode}>\n          Ahmed McGarry\n        </Text>\n        <Skeleton isLoaded={!isLoading} w={\"32\"} h={\"6\"} endColor={\"gray.200\"}>\n          <Text fontSize=\"sm\" color={\"coolGray.400\"}>\n            {totalWorkouts} Workouts\n          </Text>\n        </Skeleton>\n      </VStack>\n    );\n  };\n\n  const renderUserProfileBar = () => (\n      <HStack\n        w={\"full\"}\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        justifyContent={\"space-between\"}\n      >\n        {renderInitials()}\n        {renderDetails()}\n      </HStack>\n  );\n\n  return (\n    <>\n      {renderUserProfileBar()}\n    </>\n  );\n};\n\nexport default UserProfileBar;\n","import { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../store\";\nimport { fetchAllExercises } from \"../store/exerciseList\";\n\nexport default function useExerciseList() {\n  const dispatch = useAppDispatch()\n  const { exerciseList, status } = useAppSelector((state) => state.exerciseListSlice)\n\n  useEffect(() => {\n    if (!Object.keys(exerciseList).length) {\n      dispatch(fetchAllExercises());\n      return;\n    }\n  }, [status]);\n\n  return { exerciseList, status };\n}\n","import { faChevronRight } from \"@fortawesome/free-solid-svg-icons/faChevronRight\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { InterfaceButtonProps } from \"native-base/lib/typescript/components/primitives/Button/types\";\nimport { Button, Text } from \"native-base\";\n\ninterface IModalItem extends InterfaceButtonProps {\n  children: React.ReactNode;\n  pressHandler: () => void;\n  hasChevron?: boolean;\n}\n\nconst ModalItem: React.FC<IModalItem> = ({\n  children,\n  pressHandler,\n  hasChevron = false,\n  ...rest\n}) => {\n  return (\n    <Button\n      onPress={pressHandler}\n      variant={\"filled\"}\n      justifyContent={\"start\"}\n      backgroundColor={\"coolGray.100\"}\n      rightIcon={\n        hasChevron ? (\n          <FontAwesomeIcon icon={faChevronRight} size={12} color={\"#6b7280\"} />\n        ) : undefined\n      }\n      {...rest}\n    >\n      <Text color={\"coolGray.600\"} fontWeight={\"semibold\"}>\n        {children}\n      </Text>\n    </Button>\n  );\n};\n\nexport default ModalItem;\n","import { Modal, Skeleton, VStack } from \"native-base\";\nimport React, { useState } from \"react\";\nimport useExerciseList from \"../../hooks/useExerciseList\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport {\n  createWidget,\n  IOneRepMaxLine,\n  IWidgetInterface,\n} from \"../../store/WidgetsSlice\";\nimport ModalItem from \"./ModalItem\";\nimport ModalWrapper from \"./ModalWrapper\";\n\ninterface IProps {\n  isVisible: boolean;\n  setIsVisible: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\ntype TStep = \"CHOOSE_WIDGET_TYPE\" | \"CHOOSE_EXERCISE_TO_TRACK\";\n\nexport default function AddWidgetModal(props: IProps) {\n  const [step, setStep] = useState<TStep>(\"CHOOSE_WIDGET_TYPE\");\n\n  const { isVisible, setIsVisible } = props;\n  const { exerciseList, status } = useExerciseList();\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n\n  const dispatch = useAppDispatch();\n\n  const handleChooseExerciseToTrack = () => setStep(\"CHOOSE_EXERCISE_TO_TRACK\");\n\n  const handleCreateLineWidget = (id: number, exerciseName: string) => {\n    const widget: IOneRepMaxLine = {\n      title: `${exerciseName} Progression`,\n      type: \"ONE_REP_MAX_EST\",\n      subtitle: \"1RM Estimate\",\n      exerciseId: id,\n      user_id: userId,\n    };\n    dispatch(createWidget({ ...widget }));\n    setIsVisible(false);\n    setStep(\"CHOOSE_WIDGET_TYPE\");\n  };\n\n  interface IHandleCreateWidget {\n    title: string;\n    type: \"WEIGHT_TRACKER\" | \"SESSION_FREQUENCY\";\n    subtitle: string;\n  }\n\n  const handleCreateWidget = ({\n    title,\n    type,\n    subtitle,\n  }: IHandleCreateWidget) => {\n    const widget: IWidgetInterface = {\n      title,\n      type,\n      subtitle,\n      user_id: userId,\n    };\n    dispatch(createWidget({ ...widget }));\n    setIsVisible(false);\n  };\n\n  const renderBody = () => {\n    if (step === \"CHOOSE_WIDGET_TYPE\")\n      return (\n        <Modal.Body>\n          <VStack space={1}>\n            <ModalItem\n              pressHandler={() =>\n                handleCreateWidget({\n                  title: \"Session Frequncy\",\n                  subtitle: \"\",\n                  type: \"SESSION_FREQUENCY\",\n                })\n              }\n            >\n              Session Frequency\n            </ModalItem>\n            <ModalItem\n              pressHandler={() =>\n                handleCreateWidget({\n                  title: \"Weight Tracker\",\n                  subtitle: \"\",\n                  type: \"WEIGHT_TRACKER\",\n                })\n              }\n            >\n              Weight Tracker\n            </ModalItem>\n            <ModalItem hasChevron pressHandler={handleChooseExerciseToTrack}>\n              1 Rep Max Estimator\n            </ModalItem>\n          </VStack>\n        </Modal.Body>\n      );\n\n    if (step === \"CHOOSE_EXERCISE_TO_TRACK\")\n      return (\n        <Modal.Body>\n          <VStack space={1}>\n            {exerciseList.map(({ exercise_name, id }) => {\n              return (\n                <ModalItem\n                  pressHandler={() => handleCreateLineWidget(id, exercise_name)}\n                  key={id}\n                >\n                  {exercise_name}\n                </ModalItem>\n              );\n            })}\n          </VStack>\n        </Modal.Body>\n      );\n\n    if (step === \"CHOOSE_EXERCISE_TO_TRACK\" && status === \"pending\")\n      return <Skeleton h=\"full\" />;\n  };\n\n  return (\n    <ModalWrapper\n      header=\"Create Widget\"\n      isOpen={isVisible}\n      onClose={setIsVisible}\n      size={\"sm\"}\n      shadow={8}\n    >\n      {renderBody()}\n    </ModalWrapper>\n  );\n}\n","import { FontAwesome } from \"@expo/vector-icons\";\nimport { Box, IBoxProps, IPressableProps, Pressable } from \"native-base\";\nimport useColorScheme from \"../../../hooks/useColorScheme\";\n\ninterface IElipsis extends IPressableProps {\n  size: number;\n}\n\nconst Elipsis = ({ size, ...rest }: IElipsis) => {\n  const { elipsesColorMode, elipsesBgColorMode } = useColorScheme();\n  return (\n    <Pressable\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      backgroundColor={elipsesBgColorMode}\n      paddingX={2}\n      paddingY={1}\n      borderRadius={5}\n      {...rest}\n    >\n      <FontAwesome name=\"ellipsis-h\" size={size} color={elipsesColorMode} />\n    </Pressable>\n  );\n};\n\nexport default Elipsis;\n","import { Box, Heading, Text } from \"native-base\";\nimport { SetStateAction } from \"react\";\nimport Elipsis from \"../Layout/Buttons/Elipsis\";\n\ninterface IWidgetHeader {\n  title: string;\n  subtitle: string;\n  modalIsVisible: boolean;\n  setModalIsVisible: React.Dispatch<SetStateAction<boolean>>;\n  renderModalComponent: () => JSX.Element;\n}\n\nconst WidgetHeader = (props: IWidgetHeader) => {\n  const { renderModalComponent } = props;\n\n  const renderHeader = () => {\n    const { title, subtitle, setModalIsVisible } = props;\n    return (\n      <Box>\n        <Box flexDirection={\"row\"} alignItems={\"center\"}>\n          <Heading size={\"sm\"} flex={1}>\n            {title}\n          </Heading>\n          <Elipsis onPress={() => setModalIsVisible(true)} size={14} />\n        </Box>\n        <Text fontSize={\"sm\"} fontWeight={\"semibold\"} marginY={1} opacity={70}>\n          {subtitle}\n        </Text>\n      </Box>\n    );\n  };\n\n  return (\n    <>\n      {renderHeader()}\n      {renderModalComponent()}\n    </>\n  );\n};\n\nexport default WidgetHeader;\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { Select } from \"native-base\";\nimport { SetStateAction } from \"react\";\nimport ModalItem from \"./ModalItem\";\nimport ModalWrapper from \"./ModalWrapper\";\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons/faXmark\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteWidget } from \"../../store/WidgetsSlice\";\nimport { useAppDispatch } from \"../../store\";\n\ninterface IBarChartWidgetModal {\n  modalIsVisible: boolean;\n  setModalIsVisible: React.Dispatch<SetStateAction<boolean>>;\n  widgetId: string;\n}\n\nconst BarChartWidgetModal = (props: IBarChartWidgetModal) => {\n  const { modalIsVisible, setModalIsVisible, widgetId } = props;\n  const dispatch = useAppDispatch()\n\n  const handleSave = () => null;\n  const handleDelete = (widgetId: string) => {\n    dispatch(deleteWidget(Number(widgetId)));\n    setModalIsVisible(false);\n  };\n\n  const renderSetTarget = () => {\n    return (\n      <Select placeholder=\"Target Days Per Week\" fontSize=\"sm\">\n        <Select.Item label=\"1\" value={\"1\"} />\n        <Select.Item label=\"2\" value={\"2\"} />\n        <Select.Item label=\"3\" value={\"3\"} />\n        <Select.Item label=\"4\" value={\"4\"} />\n        <Select.Item label=\"5\" value={\"5\"} />\n        <Select.Item label=\"6\" value={\"6\"} />\n        <Select.Item label=\"7\" value={\"7\"} />\n      </Select>\n    );\n  };\n\n  const renderDelete = () => {\n    return (\n      <ModalItem\n        pressHandler={() => handleDelete(widgetId)}\n        leftIcon={<FontAwesomeIcon icon={faXmark} size={13} color=\"red\" />}\n      >\n        Delete\n      </ModalItem>\n    );\n  };\n\n  return (\n    <ModalWrapper\n      header={\"Settings\"}\n      isOpen={modalIsVisible}\n      onClose={() => setModalIsVisible(false)}\n      saveHandler={handleSave}\n    >\n      {/* {renderSetTarget()} */}\n      {renderDelete()}\n    </ModalWrapper>\n  );\n};\n\nexport default BarChartWidgetModal;\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { Select } from \"native-base\";\nimport { SetStateAction } from \"react\";\nimport { useAppDispatch } from \"../../store\";\nimport { deleteWidget } from \"../../store/WidgetsSlice\";\nimport ModalItem from \"./ModalItem\";\nimport ModalWrapper from \"./ModalWrapper\";\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons/faXmark\"\n\ninterface ILineGraphWidgetModal {\n  modalIsVisible: boolean;\n  setModalIsVisible: React.Dispatch<SetStateAction<boolean>>;\n  widgetId: string;\n}\n\nconst LineGraphWidgetModal = (props: ILineGraphWidgetModal) => {\n  const { modalIsVisible, setModalIsVisible, widgetId } = props;\n  const dispatch = useAppDispatch();\n\n  const handleSave = () => null;\n  const handleDelete = (widgetId: string) => {\n    dispatch(deleteWidget(Number(widgetId)));\n    setModalIsVisible(false);\n  };\n\n  const renderDelete = () => {\n    return (\n      <ModalItem\n        pressHandler={() => handleDelete(widgetId)}\n        leftIcon={<FontAwesomeIcon icon={faXmark} size={13} color=\"red\" />}\n      >\n        Delete\n      </ModalItem>\n    );\n  };\n\n  const renderLimitWeeks = () => {\n    return (\n      <Select placeholder=\"Limit Weeks\">\n        <Select.Item label=\"4\" value={\"4\"} />\n        <Select.Item label=\"5\" value={\"5\"} />\n        <Select.Item label=\"6\" value={\"6\"} />\n        <Select.Item label=\"7\" value={\"7\"} />\n        <Select.Item label=\"8\" value={\"8\"} />\n      </Select>\n    );\n  };\n\n  return (\n    <ModalWrapper\n      header={\"Settings\"}\n      isOpen={modalIsVisible}\n      onClose={() => setModalIsVisible(false)}\n      saveHandler={handleSave}\n    >\n      {/* {renderLimitWeeks()} */}\n      {renderDelete()}\n    </ModalWrapper>\n  );\n};\n\nexport default LineGraphWidgetModal;\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { SetStateAction } from \"react\";\nimport { useAppDispatch } from \"../../store\";\nimport { deleteWidget } from \"../../store/WidgetsSlice\";\nimport ModalItem from \"./ModalItem\";\nimport ModalWrapper from \"./ModalWrapper\";\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons/faXmark\";\n\ninterface IWeightTrackerModal {\n  modalIsVisible: boolean;\n  setModalIsVisible: React.Dispatch<SetStateAction<boolean>>;\n  widgetId: string;\n}\n\nconst WeightTrackerModal = (props: IWeightTrackerModal) => {\n  const { modalIsVisible, setModalIsVisible, widgetId } = props;\n  const dispatch = useAppDispatch();\n\n  const handleSave = () => null;\n  const handleDelete = (widgetId: string) => {\n    dispatch(deleteWidget(Number(widgetId)));\n    setModalIsVisible(false);\n  };\n\n  const renderDelete = () => {\n    return (\n      <ModalItem\n        pressHandler={() => handleDelete(widgetId)}\n        leftIcon={<FontAwesomeIcon icon={faXmark} size={13} color=\"red\" />}\n      >\n        Delete\n      </ModalItem>\n    );\n  };\n\n  return (\n    <ModalWrapper\n      header={\"Settings\"}\n      isOpen={modalIsVisible}\n      onClose={() => setModalIsVisible(false)}\n      saveHandler={handleSave}\n    >\n      {renderDelete()}\n    </ModalWrapper>\n  );\n};\n\nexport default WeightTrackerModal;\n","import { Box } from \"native-base\";\nimport { useState } from \"react\";\nimport WidgetHeader from \"./WidgetHeader\";\nimport BarChartWidgetModal from \"../Modals/BarChartWidgetModal\";\nimport LineGraphWidgetModal from \"../Modals/LineGraphWidgetModal\";\nimport WeightTrackerModal from \"../Modals/WeightTrackerModal\";\n\ninterface IWidgetContainer {\n  title: string;\n  subtitle: string;\n  children: React.ReactNode;\n  widgetId: string;\n  type: \"ONE_REP_MAX_EST\" | \"SESSION_FREQUENCY\" | \"WEIGHT_TRACKER\";\n}\n\nconst WidgetContainer = (props: IWidgetContainer) => {\n  const { title, subtitle, children, widgetId } = props;\n  const [modalIsVisible, setModalIsVisible] = useState<boolean>(false);\n\n  const renderModalComponent = () => {\n    const { type } = props;\n\n    if (type === \"SESSION_FREQUENCY\") {\n      return (\n        <BarChartWidgetModal\n          modalIsVisible={modalIsVisible}\n          setModalIsVisible={setModalIsVisible}\n          widgetId={widgetId}\n        />\n      );\n    }\n\n    if (type === \"ONE_REP_MAX_EST\") {\n      return (\n        <LineGraphWidgetModal\n          modalIsVisible={modalIsVisible}\n          setModalIsVisible={setModalIsVisible}\n          widgetId={widgetId}\n        />\n      );\n    }\n\n    if (type === \"WEIGHT_TRACKER\") {\n      return (\n        <WeightTrackerModal\n          modalIsVisible={modalIsVisible}\n          setModalIsVisible={setModalIsVisible}\n          widgetId={widgetId}\n        />\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <Box\n      borderWidth={1}\n      borderColor={\"coolGray.200\"}\n      backgroundColor={\"white\"}\n      borderRadius={10}\n      padding={3}\n      overflow={\"hidden\"}\n      flex={1}\n      my={1}\n    >\n      <WidgetHeader\n        title={title}\n        subtitle={subtitle}\n        modalIsVisible={modalIsVisible}\n        setModalIsVisible={setModalIsVisible}\n        renderModalComponent={renderModalComponent}\n      />\n      {children}\n    </Box>\n  );\n};\n\nexport default WidgetContainer;\n","import { Button, Text, useColorModeValue } from \"native-base\";\nimport { InterfaceButtonProps } from \"native-base/lib/typescript/components/primitives/Button/types\";\nimport React from \"react\";\nimport useColorScheme from \"../../../hooks/useColorScheme\";\n\ninterface ICtaButton extends InterfaceButtonProps {\n  children: React.ReactNode;\n  isHollow?: boolean;\n}\n\nconst CtaButton = (props: ICtaButton) => {\n  const { children, isHollow = false, ...rest } = props;\n  const { ctaBgColorMode, ctaTextColorMode, ctaBorderColorMode } =\n    useColorScheme();\n  const backgroundColor = isHollow ? \"transparent\" : ctaBgColorMode;\n  const borderColor = isHollow ? \"transparent\" : ctaBorderColorMode;\n  const varient = isHollow ? \"ghost\" : \"outline\";\n\n  return (\n    <Button\n      size={\"xs\"}\n      borderRadius=\"3xl\"\n      borderWidth={1}\n      borderColor={borderColor}\n      backgroundColor={backgroundColor}\n      variant={varient}\n      {...rest}\n    >\n      <Text\n        fontSize={\"2xs\"}\n        color={ctaTextColorMode}\n        textTransform={\"uppercase\"}\n        fontWeight={\"bold\"}\n      >\n        {children}\n      </Text>\n    </Button>\n  );\n};\n\nexport default CtaButton;\n","import { Input } from \"native-base\";\nimport { SetStateAction, useState } from \"react\";\nimport ModalWrapper from \"./ModalWrapper\";\nimport { faWeightScale } from \"@fortawesome/free-solid-svg-icons/faWeightScale\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport { addWeight } from \"../../store/weightSlice\";\n\ninterface IAddMeasurementModal {\n  isVisible: boolean;\n  setIsVisible: React.Dispatch<SetStateAction<boolean>>;\n}\n\nconst AddMeasurementModal = (props: IAddMeasurementModal) => {\n  const { isVisible, setIsVisible } = props;\n\n  const [weight, setWeight] = useState<string>(\"\");\n\n  const dispatch = useAppDispatch();\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n\n  const handleSave = () => {\n    if (weight === \"\") return;\n    // NOTE:\n    // Check the string is only numbers, less than 3 characters and longer than 1\n    if (!/^\\d+$/.test(weight) && weight.length <= 3 && weight.length > 1) {\n      // setError(\"Please type a valid number\")\n    }\n    dispatch(addWeight({ weight, userId }));\n    setIsVisible(false);\n  };\n\n  const renderAddWeightInput = () => {\n    return (\n      <Input\n        placeholder=\"Add Weight\"\n        fontSize={\"sm\"}\n        keyboardType=\"numeric\"\n        variant={\"filled\"}\n        backgroundColor={\"coolGray.100\"}\n        rounded={5}\n        onChangeText={(text) => setWeight(text)}\n        h={9}\n        leftElement={\n          <FontAwesomeIcon\n            icon={faWeightScale}\n            size={15}\n            style={{ marginLeft: 12, marginRight: 6, color: \"darkgray\" }}\n          />\n        }\n      />\n    );\n  };\n\n  return (\n    <ModalWrapper\n      isOpen={isVisible}\n      onClose={setIsVisible}\n      header=\"Add New Measurement\"\n      saveHandler={handleSave}\n    >\n      {renderAddWeightInput()}\n    </ModalWrapper>\n  );\n};\n\nexport default AddMeasurementModal;\n","import { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../store\";\nimport { getWeight } from \"../store/weightSlice\";\n\nconst useWeightTracker = () => {\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n  const { status } = useAppSelector((state) => state.weightSlice)\n  const { labels, values } = useAppSelector((state) => state.weightSlice.weight)\n\n  const dispatch = useAppDispatch()\n\n  const isLoading = status === \"pending\"\n\n  useEffect(() => {\n    if (status === \"idle\")\n      dispatch(getWeight({ userId }))\n  }, [status])\n\n  return { isLoading, labels, values };\n};\n\nexport default useWeightTracker;\n","import { Dimensions } from \"react-native\";\n\nconst CONFIG = {\n    backgroundGradientFrom: \"#FFFFFF\",\n    backgroundGradientTo: \"#FFFFFF\",\n    color: () => \"#808080\",\n    decimalPlaces: 1,\n    propsForDots: {\n        r: \"3\",\n        strokeWidth: \"2\",\n        stroke: \"#7851a9\",\n        fill: \"transparent\",\n    },\n    propsForBackgroundLines: {\n        strokeWidth: \"0.3\",\n        strokeLinecap: \"round\",\n        strokeDasharray: \"0, 0\",\n    },\n    propsForLabels: {\n        // fontFamily: \"sans-serif\",\n    },\n    fillShadowGradient: \"#FFFFFF\",\n    fillShadowGradientOpacity: 0,\n    bezier: true,\n};\n\nconst SCREEN_WIDTH_APP = Dimensions.get(\"window\").width;\nconst SCREEN_WIDTH_WEB = 500;\n\nexport { CONFIG, SCREEN_WIDTH_APP, SCREEN_WIDTH_WEB }","import { Skeleton } from \"native-base\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport useIsApp from \"../../../hooks/useIsApp\";\nimport useWeightTracker from \"../../../hooks/useWeightGraph\";\nimport { CONFIG, SCREEN_WIDTH_APP, SCREEN_WIDTH_WEB } from \"./config\";\n\nconst WeightTrackerWidget: React.FC = () => {\n  const { isLoading, labels, values } = useWeightTracker();\n  const isApp = useIsApp();\n\n  const SCREEN_WIDTH = isApp ? SCREEN_WIDTH_APP : SCREEN_WIDTH_WEB;\n\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        data: values,\n        color: (_: any) => `rgba(90, 34, 139, 0.3)`,\n      },\n    ],\n  };\n\n  return (\n    <Skeleton\n      height={160}\n      w={\"full\"}\n      startColor={\"gray.50\"}\n      endColor={\"gray.100\"}\n      isLoaded={!isLoading}\n    >\n      <LineChart\n        data={chartData}\n        width={SCREEN_WIDTH}\n        height={160}\n        yAxisLabel=\"\"\n        chartConfig={CONFIG}\n        yAxisSuffix=\"kg\"\n        withInnerLines={true}\n        bezier\n        style={{\n          marginVertical: 8,\n          marginHorizontal: -10,\n          borderRadius: 16,\n        }}\n      />\n    </Skeleton>\n  );\n};\n\nexport default WeightTrackerWidget;\n","import { SetStateAction } from \"react\";\nimport { useAppDispatch } from \"../../store\";\n\nimport useIsApp from \"../../hooks/useIsApp\";\nimport { logout } from \"../../store/userSlice\";\n\nimport ModalItem from \"./ModalItem\";\nimport ModalWrapper from \"./ModalWrapper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\ninterface ISettingsModal {\n  isVisible: boolean;\n  setIsVisible: React.Dispatch<SetStateAction<boolean>>;\n}\n\nconst SettingsModal = (props: ISettingsModal) => {\n  const { isVisible, setIsVisible } = props;\n  const dispatch = useAppDispatch();\n\n  const isApp = useIsApp();\n\n  const logoutOnApp = async () => {\n    if (isApp) {\n      try {\n        await AsyncStorage.removeItem(\"JACKED__SESSION_TOKEN\");\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const logoutOnWeb = () => {\n    if (!isApp) {\n      localStorage.removeItem(\"JACKED__SESSION_TOKEN\");\n    }\n  }\n\n  const handleLogout = () => {\n    dispatch(logout());\n    logoutOnApp();\n    logoutOnWeb();\n    setIsVisible(false);\n  };\n\n  return (\n    <ModalWrapper\n      header=\"Settings\"\n      isOpen={isVisible}\n      onClose={setIsVisible}\n      size={\"sm\"}\n    >\n      <ModalItem pressHandler={() => handleLogout()} colorScheme={\"red\"}>\n        Logout\n      </ModalItem>\n    </ModalWrapper>\n  );\n};\n\nexport default SettingsModal;\n","import { RootTabScreenProps } from \"../../types\";\nimport { Box, Heading, View, FlatList, HStack } from \"native-base\";\nimport SessionFrequncyWidget from \"../../components/Widgets/SessionFrequency/SessionFrequencyWidget\";\nimport OneRepMaxWidget from \"../../components/Widgets/OneRepMax/OneRepMaxWidget\";\nimport UserProfileBar from \"../../components/Layout/UserProfileBar\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport AddWidgetModal from \"../../components/Modals/AddWidgetModal\";\nimport React, { useEffect, useState } from \"react\";\nimport { getWidgets, IOneRepMaxLine } from \"../../store/WidgetsSlice\";\nimport WidgetContainer from \"../../components/Widgets/WidgetContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faWrench } from \"@fortawesome/free-solid-svg-icons/faWrench\";\nimport CtaButton from \"../../components/Layout/Buttons/CtaButton\";\nimport { faGear } from \"@fortawesome/free-solid-svg-icons/faGear\";\nimport { faRuler } from \"@fortawesome/free-solid-svg-icons/faRuler\";\nimport useColorScheme from \"../../hooks/useColorScheme\";\nimport AddMeasurementModal from \"../../components/Modals/AddMeasurementModal\";\nimport WeightTrackerWidget from \"../../components/Widgets/WeightTracker/WeightTrackerWidget\";\nimport { getWeight } from \"../../store/weightSlice\";\nimport SettingsModal from \"../../components/Modals/SettingsModal\";\n\nexport default function Profile({ navigation }: RootTabScreenProps<\"Profile\">) {\n  const [modalIsVisible, setModalIsVisible] = useState<boolean>(false);\n  const [weightModalIsVisible, setWeightModalIsVisible] =\n    useState<boolean>(false);\n\n  const [modalIsOpen, setModalIsOpen] = useState<boolean>(false);\n  \n  const { widgets } = useAppSelector((state) => state.widgetSlice);\n  const { h1ColorMode, screenColorMode, ctaIconColorMode } = useColorScheme();\n\n  const dispatch = useAppDispatch();\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n\n  const [isWidgetRefreshing, setIsWidgetRefreshing] = useState(false);\n\n  useEffect(() => {\n    dispatch(getWidgets({ userId }));\n  }, []);\n\n  const renderProfile = () => {\n    return <UserProfileBar />;\n  };\n\n  const handleRefreshWidgets = () => {\n    setIsWidgetRefreshing(true);\n    dispatch(getWeight({ userId }));\n\n    setIsWidgetRefreshing(false);\n  };\n\n  const handlePress = () => setModalIsOpen(true);\n\n  const renderDashboard = () => {\n    return (\n      <Box\n        flexDirection=\"row\"\n        alignItems={\"center\"}\n        justifyContent=\"space-between\"\n        marginY={5}\n      >\n        <Heading size={\"sm\"}>Dashboard</Heading>\n        <CtaButton\n          onPress={() => setModalIsVisible(true)}\n          leftIcon={\n            <FontAwesomeIcon\n              icon={faWrench}\n              color={ctaIconColorMode}\n              size={12}\n            />\n          }\n        >\n          Add Widget\n        </CtaButton>\n      </Box>\n    );\n  };\n\n\n  const renderSettingsModal = () => (\n    <SettingsModal isVisible={modalIsOpen} setIsVisible={setModalIsOpen} />\n  );\n\n  const renderScreenHeading = () => (\n    <HStack justifyContent={\"space-between\"} alignItems={\"center\"} my={2}>\n      <Heading size=\"xl\" color={h1ColorMode}>\n        My Profile\n      </Heading>\n      <CtaButton\n        onPress={handlePress}\n        leftIcon={\n          <FontAwesomeIcon icon={faGear} size={12} color={ctaIconColorMode} />\n        }\n      >\n        Settings\n      </CtaButton>\n    </HStack>\n  );\n\n  const renderWidget = (widgetId: string) => {\n    const { type, title, subtitle } = widgets[widgetId];\n    const { exerciseId } = (widgets[widgetId] as IOneRepMaxLine) || null;\n\n    const WIDGET_MAP = {\n      ONE_REP_MAX_EST: <OneRepMaxWidget exerciseId={exerciseId} />,\n      SESSION_FREQUENCY: <SessionFrequncyWidget />,\n      WEIGHT_TRACKER: <WeightTrackerWidget />,\n    };\n\n    return (\n      <WidgetContainer\n        type={type}\n        title={title}\n        subtitle={subtitle}\n        widgetId={widgetId}\n      >\n        {WIDGET_MAP[type]}\n      </WidgetContainer>\n    );\n  };\n\n  const renderWidgets = () => {\n    return (\n      <FlatList\n        data={Object.keys(widgets)}\n        renderItem={({ item }) => renderWidget(item)}\n        onRefresh={handleRefreshWidgets}\n        refreshing={isWidgetRefreshing}\n      />\n    );\n  };\n\n  const renderAddWidgetModal = () => (\n    <AddWidgetModal\n      isVisible={modalIsVisible}\n      setIsVisible={setModalIsVisible}\n    />\n  );\n\n  const renderMeasurement = () => {\n    return (\n      <CtaButton\n        isHollow\n        pl={0}\n        justifyContent={\"flex-start\"}\n        onPress={() => setWeightModalIsVisible(true)}\n        leftIcon={\n          <FontAwesomeIcon icon={faRuler} size={20} color={ctaIconColorMode} />\n        }\n      >\n        Add Weight\n      </CtaButton>\n    );\n  };\n\n  const renderAddMeasurementModal = () => (\n    <AddMeasurementModal\n      isVisible={weightModalIsVisible}\n      setIsVisible={setWeightModalIsVisible}\n    />\n  );\n\n  return (\n    <View\n      padding=\"3\"\n      backgroundColor={screenColorMode}\n      flexGrow={1}\n      flex={1}\n      _web={{\n        maxW: \"lg\",\n        w: \"100%\",\n        mx: \"auto\",\n      }}\n    >\n      {renderMeasurement()}\n      {renderScreenHeading()}\n      {renderProfile()}\n      {renderDashboard()}\n      {renderWidgets()}\n      {renderAddWidgetModal()}\n      {renderAddMeasurementModal()}\n      {renderSettingsModal()}\n    </View>\n  );\n}\n","import { Center, HStack, Spinner, Text } from \"native-base\";\nimport useTotalWorkouts from \"../../hooks/useTotalWorkouts\";\nimport { useAppSelector } from \"../../store\";\n\nconst ListFooter = () => {\n  const { status, history } = useAppSelector(\n    (state) => state.workoutHistorySlice\n  );\n  const { totalWorkouts } = useTotalWorkouts();\n\n  if (history.length === totalWorkouts) {\n    return (\n      <Center mt={2}>\n        <Text color={\"coolGray.400\"} fontSize={\"sm\"}>\n          You have reached the end!\n        </Text>\n      </Center>\n    );\n  }\n\n  if (status !== \"pending\") return null;\n\n  return (\n    <HStack\n      justifyContent={\"center\"}\n      w={\"full\"}\n      space={2}\n      alignItems=\"center\"\n      h={\"16\"}\n    >\n      <Spinner colorScheme={\"info\"} />\n      <Text>Loading</Text>\n    </HStack>\n  );\n};\n\nexport default ListFooter;\n","import { faCalendar } from \"@fortawesome/free-regular-svg-icons/faCalendar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FlatList, Heading, HStack, Skeleton, View } from \"native-base\";\nimport { lazy, Suspense, useState } from \"react\";\nimport CtaButton from \"../../components/Layout/Buttons/CtaButton\";\nimport ListFooter from \"../../components/Lists/ListFooter\";\nimport useColorScheme from \"../../hooks/useColorScheme\";\nimport useHistory from \"../../hooks/useHistory\";\nimport { useAppSelector } from \"../../store\";\n\nconst HistoryCard = lazy(() => import(\"../../components/Layout/Cards/HistoryCard\"));\n\nexport default function History() {\n  const [page, setPage] = useState<number>(1);\n  const { history } = useHistory(page);\n  const { screenColorMode, h1ColorMode } = useColorScheme();\n  const navigation = useNavigation();\n\n  const isLoaded =\n    useAppSelector((state) => state.workoutHistorySlice.status) === \"fulfilled\";\n\n  const renderHeader = () => {\n    return (\n      <HStack justifyContent={\"space-between\"} alignItems={\"center\"} my={2}>\n        <Heading size={\"xl\"} color={h1ColorMode}>\n          History\n        </Heading>\n        <CtaButton\n          onPress={() => navigation.navigate(\"Calendar\")}\n          leftIcon={\n            <FontAwesomeIcon icon={faCalendar} size={12} color={\"#0284c7\"} />\n          }\n        >\n          Calendar\n        </CtaButton>\n      </HStack>\n    );\n  };\n\n  const renderSessions = () => {\n    return (\n      <FlatList\n        data={history}\n        initialNumToRender={6}\n        keyExtractor={({ id }) => String(id)}\n        flexGrow={1}\n        onEndReached={() => {\n          setPage((page) => page + 1);\n        }}\n        onEndReachedThreshold={0.1}\n        ListFooterComponent={<ListFooter />}\n        renderItem={({ item: { workout_name, lifts, date, id } }) => (\n          <Suspense\n            fallback={\n              <Skeleton\n                startColor={\"gray.50\"}\n                endColor={\"gray.100\"}\n                h={\"40\"}\n                my={2}\n              />\n            }\n          >\n            <HistoryCard\n              workoutName={workout_name}\n              lifts={lifts}\n              date={date}\n              isLoaded={isLoaded}\n              workoutId={id}\n            />\n          </Suspense>\n        )}\n      />\n    );\n  };\n\n  return (\n    <View\n      backgroundColor={screenColorMode}\n      padding={3}\n      paddingBottom={10}\n      h={\"full\"}\n      _web={{\n        maxW: \"lg\",\n        w: \"100%\",\n        mx: \"auto\",\n      }}\n    >\n      {renderHeader()}\n      {renderSessions()}\n    </View>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../store\";\nimport { getHistory } from \"../store/workoutHistorySlice\";\n\nexport default function useHistory(page = 1) {\n  const dispatch = useAppDispatch();\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n  const { history } = useAppSelector(\n    (state) => state.workoutHistorySlice\n  );\n\n  useEffect(() => {\n    dispatch(getHistory({ userId, page }));\n  }, [page]);\n\n  return { history };\n}\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from \"@react-navigation/native\";\nimport * as Linking from \"expo-linking\";\n\nimport { RootStackParamList } from \"../types\";\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.createURL(\"/\")],\n  config: {\n    screens: {\n      Auth: \"auth\",\n      Welcome: \"welcome\",\n      CreateTemplate: \"create-template\",\n      Root: {\n        path: \"\",\n        screens: {\n          Exercises: \"exercises\",\n          History: \"history\",\n          Profile: {\n            path: \"profile\",\n            screens: {\n              path: \"settings\",\n            },\n          },\n          Start: {\n            path: \"start\",\n            screens: {\n              path: \"active-workout\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport default linking;\n","const useTodaysDate = () => {\n  const today = new Date();\n  const dd = String(today.getDate()).padStart(2, \"0\");\n  const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  const yyyy = today.getFullYear();\n\n  const date = yyyy + \"/\" + mm + \"/\" + dd;\n  return date\n};\n\nexport default useTodaysDate","import { View } from \"native-base\";\nimport { CalendarList } from \"react-native-calendars\";\nimport { useAppSelector } from \"../../store\";\n\nimport useTodaysDate from \"../../hooks/useTodaysDate\";\nimport { Dimensions } from \"react-native\";\nimport useIsApp from \"../../hooks/useIsApp\";\n\nexport default function Calendar() {\n  const history = useAppSelector((state) => state.workoutHistorySlice.history);\n  const historyObj = history\n    .map((el) => el.date)\n    .reduce((ac, a) => ({ ...ac, [a]: { selected: true } }), {});\n\n  const maxDate = useTodaysDate();\n\n  const isApp = useIsApp()\n\n  const SCREEN_WIDTH_APP = Dimensions.get(\"window\").width;\n  const SCREEN_WIDTH = isApp ? SCREEN_WIDTH_APP : 500;\n\n  return (\n    <View\n      backgroundColor={\"white\"}\n      flex={1}\n      _web={{\n        maxW: \"lg\",\n        w: \"100%\",\n        mx: \"auto\",\n        backgroundColor: \"white\",\n        display: \"flex\"\n      }}\n    >\n      <CalendarList\n        maxDate={maxDate}\n        markedDates={historyObj}\n        minDate={\"2022-01-01\"}\n        calendarWidth={SCREEN_WIDTH}\n      />\n    </View>\n  );\n}\n","import { Box, Text } from \"native-base\";\nimport { useEffect, useState } from \"react\";\n\nconst Timer = () => {\n  const [secondsElapsed, setSecondsElapsed] = useState(0);\n  const [formattedTime, setFormattedTime] = useState(\"\");\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      setSecondsElapsed((prevState) => prevState + 1);\n    }, 1000);\n\n    return () => clearInterval(myInterval);\n  }, []);\n\n  useEffect(() => {\n    secondsToFormattedTime();\n  }, [secondsElapsed]);\n\n  const secondsToFormattedTime = () => {\n    const hours = Math.floor(secondsElapsed / (60 * 60))\n      .toString()\n      .padStart(2, \"0\");\n\n    const divisor_for_minutes = secondsElapsed % (60 * 60);\n    const minutes = Math.floor(divisor_for_minutes / 60)\n      .toString()\n      .padStart(2, \"0\");\n\n    const divisor_for_seconds = divisor_for_minutes % 60;\n    const seconds = Math.ceil(divisor_for_seconds).toString().padStart(2, \"0\");\n\n    setFormattedTime(`${hours}:${minutes}:${seconds}`);\n  };\n  return (\n    <Box\n      width={\"20\"}\n      backgroundColor={\"coolGray.100\"}\n      borderRadius={5}\n      flexDir=\"row\"\n      justifyContent={\"center\"}\n      py={1}\n      px={2}\n    >\n      <Text color={\"coolGray.400\"}>{formattedTime}</Text>\n    </Box>\n  );\n};\n\nexport default Timer;\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons/faCheck\";\nimport { Box, HStack, Input, Pressable, Text } from \"native-base\";\nimport { useRef, useState } from \"react\";\nimport { useAppDispatch } from \"../../store\";\nimport { deleteSet, updateReps, updateWeight } from \"../../store/currentWorkoutSlice\";\nimport { Swipeable } from \"react-native-gesture-handler\";\nimport usePreviousSet from \"../../hooks/usePreviousSet\";\nimport { faMinus } from \"@fortawesome/free-solid-svg-icons/faMinus\";\n\ninterface Props {\n  weight: string;\n  reps: string;\n  rpe: number;\n  setNumber: number;\n  liftId: string;\n  setId: string;\n  exerciseId: number;\n  template: boolean;\n}\n\nconst ActiveWorkoutSet = (props: Props) => {\n  const { exerciseId, setNumber, weight, reps, template } = props;\n  const [isDone, setIsDone] = useState<boolean>(false);\n\n  const swipeableRef = useRef<null | any>(null);\n\n  const previous = usePreviousSet({ exerciseId, setNumber });\n  const dispatch = useAppDispatch();\n\n  const backgroundColor = isDone ? \"success.100\" : \"white\";\n\n  const weightRef = useRef<HTMLInputElement>();\n  const repsRef = useRef<HTMLInputElement>();\n\n  const handleSwipeRight = () => {\n    const { liftId, setId } = props;\n\n    dispatch(deleteSet({ liftId, setId, setNumber }));\n    swipeableRef.current && swipeableRef.current.close();\n  };\n\n  const handleUpdateWeight = (newwWeight: string) => { \n    const { setId, liftId } = props;\n\n    const params = {\n      liftId,\n      setId,\n      weight: newwWeight\n    }\n\n    dispatch(updateWeight(params))\n  }\n\n  const handleUpdateReps = (newwReps: string) => {\n    const { setId, liftId } = props;\n\n    const params = {\n      liftId,\n      setId,\n      reps: newwReps\n    }\n\n    dispatch(updateReps(params))\n   } \n\n  const handleCheckSet = () => {\n\n    setIsDone((isDone) => !isDone);\n  };\n\n  const renderOnSwipeRight = () => {\n    return (\n      <Box\n        backgroundColor={\"red.500\"}\n        w={\"full\"}\n        justifyContent={\"center\"}\n        flexDir={\"row\"}\n        alignItems=\"center\"\n        pr={6}\n      >\n        <Text fontWeight={\"700\"} textAlign={\"center\"} color={\"white\"}>\n          Delete Set\n        </Text>\n      </Box>\n    );\n  };\n\n  const renderSetNumber = () => (\n    <Box flex={1}>\n      <Pressable\n        w={\"1/2\"}\n        alignItems=\"center\"\n        justifyContent={\"center\"}\n        borderRadius={6}\n        zIndex={\"-1\"}\n      >\n        <Text color=\"text.600\" textAlign={\"center\"} w={5} fontWeight={700}>\n          {setNumber}\n        </Text>\n      </Pressable>\n    </Box>\n  );\n\n  const renderDash = () => {\n    return <FontAwesomeIcon icon={faMinus} size={18} />;\n  };\n\n  const renderPrevious = () => {\n    if (!previous) return <Box flex={2}>{renderDash()}</Box>;\n\n    const previousString = `${previous?.weight} kg x ${previous?.reps}`;\n\n    return (\n      <Text fontSize=\"xs\" opacity={50} flex={2} fontWeight={700}>\n        {previousString}\n      </Text>\n    );\n  };\n\n  const renderWeightInput = () => (\n    <Box flex={2} py={1}>\n      <Input\n        placeholder={weight}\n        backgroundColor={\"whitesmoke\"}\n        keyboardType={\"numeric\"}\n        isDisabled={isDone}\n        onChangeText={(text) => handleUpdateWeight(text)}\n        w={16}\n        fontWeight={700}\n        textAlign={\"center\"}\n        color={\"coolGray.700\"}\n        ref={weightRef}\n      />\n    </Box>\n  );\n\n  const renderRepsInput = () => (\n    <Box flex={2} py={1}>\n      <Input\n        placeholder={reps}\n        backgroundColor={\"whitesmoke\"}\n        keyboardType={\"numeric\"}\n        isDisabled={isDone}\n        onChangeText={(text) => handleUpdateReps(text)}\n        w={16}\n        fontWeight={700}\n        textAlign={\"center\"}\n        color={\"text.900\"}\n        ref={repsRef}\n      />\n    </Box>\n  );\n\n  const renderCheck = () => {\n    return (\n      <Pressable\n        alignItems={\"flex-end\"}\n        flexShrink={1}\n        onPress={handleCheckSet}\n      >\n        <FontAwesomeIcon icon={template ? faMinus : faCheck} size={15} />\n      </Pressable>\n    );\n  };\n\n  return (\n    <Swipeable\n      renderRightActions={renderOnSwipeRight}\n      onSwipeableOpen={handleSwipeRight}\n      rightThreshold={10}\n      ref={swipeableRef}\n    >\n      <HStack\n        alignItems={\"center\"}\n        justifyContent={\"space-between\"}\n        backgroundColor={backgroundColor}\n        paddingX={2}\n      >\n        {renderSetNumber()}\n        {renderPrevious()}\n        {renderWeightInput()}\n        {renderRepsInput()}\n        {renderCheck()}\n      </HStack>\n    </Swipeable>\n  );\n};\n\nexport default ActiveWorkoutSet;\n","import { useEffect, useState } from \"react\";\nimport { supabase } from \"../supabase/supabaseClient\";\n\ninterface IProps {\n  exerciseId: number;\n  setNumber: number;\n}\n\ninterface ISet {\n  weight: string;\n  reps: string;\n  rpe: number;\n  setNumber: number;\n}\n\n// NOTE: FIX THIS AND THE SET TO USE A REF TO DECIDE THE INITIAL VALUE OF THE PLACEHOLDER\nexport default function usePreviousSet(props: IProps) {\n  const [previous, setPrevious] = useState<ISet>();\n  const { exerciseId, setNumber } = props;\n\n  useEffect(() => {\n    getPrevData();\n  }, []);\n\n  const getPrevData = async () => {\n    try {\n      try {\n        const { data, error } = await supabase\n          .from(\"set\")\n          .select(\"weight, reps, liftId, setNumber, rpe\")\n          .eq(\"exerciseId\", exerciseId)\n          .eq(\"setNumber\", setNumber)\n          .order(\"liftId\", { ascending: false })\n          .limit(1);\n\n        if (error) {\n          console.error(error);\n          return null;\n        }\n\n        const { weight, reps, rpe } = data[0] || {};\n\n        if (weight === undefined || reps === undefined || rpe === undefined) {\n          return null;\n        }\n\n        setPrevious({\n          reps,\n          weight,\n          rpe,\n          setNumber,\n        });\n      } catch (error) {\n        console.error(error);\n        return null;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return previous;\n}\n","let counter = 1;\n\nconst useId = (prefix: \"set\" | \"lift\" | \"temp\" | \"fol\" | \"wid\") => {\n  const id = `${prefix}-${counter.toString().padStart(2, \"0\")}`;\n  counter++;\n  return id;\n};\n\nexport default useId;\n","import { Box, Heading, HStack, Pressable, Text, VStack } from \"native-base\";\nimport { SetInterface } from \"../../types/CurrentWorkoutInterface\";\nimport { faCheckDouble } from \"@fortawesome/free-solid-svg-icons/faCheckDouble\";\nimport { faLock } from \"@fortawesome/free-solid-svg-icons/faLock\";\nimport ActiveWorkoutSet from \"./ActiveWorkoutSet\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { addSet, deleteLift } from \"../../store/currentWorkoutSlice\";\nimport useId from \"../../hooks/useId\";\nimport { useAppDispatch } from \"../../store\";\nimport { Swipeable } from \"react-native-gesture-handler\";\nimport { useRef } from \"react\";\n\ninterface IProps {\n  exerciseId: number;\n  exerciseName: string;\n  sets: SetInterface;\n  liftNumber: number;\n  liftId: string;\n  template: boolean;\n}\nconst ActiveWorkoutLift = (props: IProps) => {\n  const { exerciseName, sets, liftId, exerciseId } = props;\n  const dispatch = useAppDispatch();\n\n  const swipeableRef = useRef<null | any>(null);\n\n  const handleSwipeRight = () => {\n    dispatch(deleteLift({ liftId }));\n    swipeableRef.current && swipeableRef.current.close();\n  };\n\n  const handleAddSet = (liftId: string) => {\n    const setId = useId(\"set\");\n\n    dispatch(addSet({ liftId, setId }));\n  };\n\n  const renderOnSwipeRight = () => {\n    return (\n      <Box\n        backgroundColor={\"red.500\"}\n        w={\"full\"}\n        justifyContent={\"center\"}\n        flexDir={\"row\"}\n        alignItems=\"center\"\n        pr={6}\n      >\n        <Text fontWeight={\"700\"} textAlign={\"center\"} color={\"white\"}>\n          Delete Lift\n        </Text>\n      </Box>\n    );\n  };\n\n  const renderHeading = (exerciseName: string) => (\n    <Heading size={\"md\"} color={\"info.400\"} my={1} padding={2}>\n      {exerciseName}\n    </Heading>\n  );\n\n  const renderCheck = () => {\n    const { template } = props;\n\n    return (\n      <Pressable flexShrink={1} padding={1}>\n        <FontAwesomeIcon icon={template ? faLock : faCheckDouble} size={10} />\n      </Pressable>\n    );\n  };\n\n  const renderTableHead = () => {\n    return (\n      <HStack\n        alignItems=\"center\"\n        justifyContent={\"space-between\"}\n        my={2}\n        paddingX={2}\n      >\n        <Heading size=\"xs\" flexShrink={1}>\n          Sets\n        </Heading>\n        <Heading size=\"xs\" flex={2} textAlign=\"center\">\n          Previous\n        </Heading>\n        <Heading size=\"xs\" flex={2} textAlign=\"center\" mr={1}>\n          Kg\n        </Heading>\n        <Heading size=\"xs\" flex={2} textAlign=\"center\" mr={4}>\n          Reps\n        </Heading>\n        {renderCheck()}\n      </HStack>\n    );\n  };\n\n  const renderAddSet = (liftId: string) => {\n    return (\n      <Pressable\n        w=\"full\"\n        bg={\"whitesmoke\"}\n        mt={2}\n        onPress={() => handleAddSet(liftId)}\n      >\n        <Text textAlign={\"center\"} py={1} fontWeight={600}>\n          Add a set\n        </Text>\n      </Pressable>\n    );\n  };\n\n  const renderSets = (sets: SetInterface, liftId: string) => {\n    const { template } = props;\n    const setList = Object.values(sets);\n\n    return (\n      <VStack>\n        {setList.map((set) => (\n          <ActiveWorkoutSet\n            {...set}\n            liftId={liftId}\n            key={set.setId}\n            exerciseId={exerciseId}\n            template={template}\n          />\n        ))}\n      </VStack>\n    );\n  };\n\n  return (\n    <Swipeable\n      ref={swipeableRef}\n      renderRightActions={renderOnSwipeRight}\n      onSwipeableOpen={handleSwipeRight}\n      rightThreshold={10}\n      containerStyle={{ marginVertical: 4 }}\n    >\n      <VStack key={liftId} backgroundColor={\"white\"} p={3}>\n        {renderHeading(exerciseName)}\n        {renderTableHead()}\n        {renderSets(sets, liftId)}\n        {renderAddSet(liftId)}\n      </VStack>\n    </Swipeable>\n  );\n};\n\nexport default ActiveWorkoutLift;\n","import {\n  Box,\n  Text,\n  Input,\n  View,\n  VStack,\n  Image,\n  FlatList,\n  Button,\n  Center,\n} from \"native-base\";\nimport Timer from \"../Utils/Timer\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport {\n  cancelWorkout,\n  saveWorkout,\n  setWorkoutTitle,\n} from \"../../store/currentWorkoutSlice\";\nimport ActiveWorkoutLift from \"../ActiveWorkout/ActiveWorkoutLift\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { createTemplate } from \"../../store/templateSlice\";\n\ninterface IParams {\n  folderId: string;\n}\n\ninterface ICreateWorkout {\n  template: boolean;\n}\n\nconst CreateWorkout = ({ template }: ICreateWorkout) => {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector((state) => state.currentWorkoutSlice);\n  const title = state.workoutTitle || \"Untitled Workout\";\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n  const { navigate, goBack } = useNavigation();\n  const { params } = useRoute();\n\n  const handleEndWorkout = () => {\n    dispatch(setWorkoutTitle(title));\n    dispatch(saveWorkout());\n    goBack();\n  };\n\n  const handleChangeWorkoutTitle = (text: string) => {\n    dispatch(setWorkoutTitle(text));\n  };\n\n  const handleSaveTemplate = () => {\n    const { folderId: folId } = params as IParams;\n    const exercisesArray = Object.values(state.exercises);\n\n    const templateParams = {\n      folId,\n      title,\n      params: exercisesArray,\n      userId,\n    };\n\n    console.log(\"templateParams\", templateParams);\n\n    dispatch(setWorkoutTitle(title));\n    dispatch(createTemplate(templateParams));\n    dispatch(cancelWorkout());\n    goBack();\n  };\n\n  const renderHeading = () => {\n    return (\n      <Input\n        flexDirection={\"row\"}\n        alignItems=\"center\"\n        justifyContent={\"space-between\"}\n        value={title}\n        onChangeText={(text) => handleChangeWorkoutTitle(text)}\n        borderWidth={0}\n        fontWeight={700}\n        color={\"coolGray.700\"}\n        _focus={{\n          backgroundColor: \"white\",\n          borderWidth: 0,\n          focusOutlineColor: \"white\",\n        }}\n        fontSize={\"2xl\"}\n        editable\n        mx={2}\n        rightElement={renderEndWorkout()}\n      />\n    );\n  };\n\n  const renderTimer = () => {\n    return template ? null : (\n      <Box paddingX={3} m={2}>\n        <Timer />\n      </Box>\n    );\n  };\n\n  const renderEndWorkout = () => {\n    return template ? (\n      <></>\n    ) : (\n      <Center>\n        <Button\n          shadow={1}\n          borderRadius={5}\n          backgroundColor=\"green.400\"\n          onPress={handleEndWorkout}\n        >\n          <Text\n            color=\"green.50\"\n            fontWeight={900}\n            textAlign={\"center\"}\n            fontSize=\"xs\"\n            letterSpacing={\"xl\"}\n          >\n            FINISH\n          </Text>\n        </Button>\n      </Center>\n    );\n  };\n\n  const renderSaveTemplate = () => {\n    return !template ? null : (\n      <Button\n        onPress={handleSaveTemplate}\n        backgroundColor=\"success.400\"\n        justifyContent={\"center\"}\n        size={\"sm\"}\n      >\n        <Text color=\"success.50\" fontWeight={900} textAlign={\"center\"}>\n          Save Template\n        </Text>\n      </Button>\n    );\n  };\n\n  const renderCancelWorkout = () => {\n    return template ? null : (\n      <Button\n        justifyContent={\"center\"}\n        size={\"sm\"}\n        variant={\"subtle\"}\n        backgroundColor={\"red.400\"}\n        onPress={() => {\n          dispatch(cancelWorkout());\n          navigate(\"Root\", { screen: \"Start\" });\n        }}\n      >\n        <Text color=\"red.50\" fontWeight={900} textAlign={\"center\"}>\n          Cancel\n        </Text>\n      </Button>\n    );\n  };\n  const renderAddLift = () => {\n    return (\n      <Button\n        onPress={() => navigate(\"AddExercises\")}\n        backgroundColor=\"info.400\"\n        justifyContent={\"center\"}\n        size={\"sm\"}\n      >\n        <Text color=\"info.50\" fontWeight={900} textAlign={\"center\"}>\n          Add A Lift\n        </Text>\n      </Button>\n    );\n  };\n\n  const renderButtons = () => {\n    return (\n      <VStack space={2} mt={2} px={3}>\n        {renderCancelWorkout()}\n        {renderAddLift()}\n        {renderSaveTemplate()}\n      </VStack>\n    );\n  };\n\n  const renderNoLifts = () => {\n    return (\n      <Box flexGrow={1} justifyContent={\"center\"} alignItems=\"center\">\n        <Image\n          source={require(\"../../images/undraw_Powerful_re_frhr.png\")}\n          alt={\"Personal Trainer Training Client\"}\n          size={\"2xl\"}\n        />\n        <Text\n          color={\"text.700\"}\n          opacity={50}\n          fontWeight=\"semibold\"\n          textTransform=\"capitalize\"\n        >\n          Add some lifts to start your workout!\n        </Text>\n      </Box>\n    );\n  };\n\n  const renderLifts = () => {\n    const { exercises } = state;\n\n    if (Object.keys(exercises).length < 1) return renderNoLifts();\n\n    return (\n      <FlatList\n        data={Object.values(exercises)}\n        renderItem={({ item }) => (\n          <ActiveWorkoutLift {...item} template={template} />\n        )}\n        keyExtractor={(item) => item.liftId}\n        flex={1}\n      />\n    );\n  };\n\n  return (\n    <View flex={1}>\n      {renderHeading()}\n      {renderTimer()}\n      {renderLifts()}\n      {renderButtons()}\n    </View>\n  );\n};\n\nexport default CreateWorkout;\n","import { View } from \"native-base\";\nimport CreateWorkout from \"../../components/CreateWorkout/CreateWorkout\";\n\nconst ActiveWorkout = () => {\n  return (\n    <View\n      backgroundColor={\"coolGray.50\"}\n      h={\"full\"}\n      px={1}\n      py={3}\n      _web={{\n        maxW: \"lg\",\n        w: \"100%\",\n        mx: \"auto\",\n      }}\n    >\n      <CreateWorkout template={false} />\n    </View>\n  );\n};\n\nexport default ActiveWorkout;\n","import ExerciseInterface from \"../../types/ExerciseInterface\";\n\ninterface IReturn {\n  title: string;\n  data: ExerciseInterface[];\n}\nconst exerciseListToSections = (list: ExerciseInterface[]): IReturn[] => {\n  const newList = list.map((el) => {\n    const sectionTitle = el.exercise_name[0].toUpperCase();\n    return {\n      title: sectionTitle,\n      data: [el],\n    };\n  });\n\n  const sections = newList.reduce((acc, curr) => {\n    const index = acc.findIndex((el) => el.title === curr.title);\n    if (index !== -1) {\n      acc[index].data.push(curr.data[0]);\n    } else {\n      acc.push(curr);\n    }\n    return acc;\n  }, [] as IReturn[]);\n\n  return sections\n};\n\nexport default exerciseListToSections;\n","import { FontAwesome } from \"@expo/vector-icons\";\nimport { Input, Skeleton, VStack, SectionList, Text } from \"native-base\";\nimport React, { lazy, Suspense, useState } from \"react\";\nimport useExerciseList from \"../../hooks/useExerciseList\";\nimport ExerciseInterface from \"../../types/ExerciseInterface\";\nimport exerciseListToSections from \"../../utils/ExerciseList/exerciseListToSections\";\n\ninterface Props {\n  showExerciseDetails: boolean;\n}\n\nconst ExerciseCard = lazy(() => import(\"../Layout/Cards/ExerciseCard\"));\n\nexport const ExerciseList: React.FC<Props> = ({\n  showExerciseDetails = false,\n}) => {\n  const [exercises, setExercises] = useState<ExerciseInterface[]>([]);\n  const { exerciseList, status } = useExerciseList();\n\n  const handleFilter = (text: string) => {\n    const filteredExercises = exerciseList.filter((el) =>\n      el.exercise_name.includes(text)\n    );\n    setExercises(filteredExercises);\n  };\n\n  const renderSearchBar = () => {\n    return (\n      <Input\n        flexDir={\"row\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n        paddingX={2}\n        borderRadius={5}\n        borderColor={\"coolGray.200\"}\n        backgroundColor={\"white\"}\n        _dark={{\n          backgroundColor: \"coolGray.600\",\n          borderColor: \"coolGray.600\",\n        }}\n        onChangeText={(text) => handleFilter(text)}\n        fontSize={\"md\"}\n        placeholder=\"Search\"\n        leftElement={\n          <FontAwesome\n            name=\"search\"\n            color=\"black\"\n            style={{ marginLeft: 10, color: \"gray\" }}\n            size={15}\n          />\n        }\n      />\n    );\n  };\n\n  const renderList = () => {\n    const sectionList = exercises.length\n      ? exerciseListToSections(exercises)\n      : exerciseListToSections(exerciseList);\n    return (\n      <SectionList\n        sections={sectionList}\n        borderRadius={5}\n        overflow={\"hidden\"}\n        flexGrow={1}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text fontWeight={700} color={\"coolGray.300\"} fontSize={\"xs\"} p={2}>\n            {title}\n          </Text>\n        )}\n        renderItem={({ item }) => (\n          <Suspense\n            fallback={\n              <Skeleton\n                w={\"full\"}\n                h={\"12\"}\n                startColor={\"gray.50\"}\n                endColor={\"gray.100\"}\n                my={2}\n              />\n            }\n          >\n            <ExerciseCard\n              {...item}\n              isLoading={status === \"fulfilled\"}\n              showExerciseDetails={showExerciseDetails}\n            />\n          </Suspense>\n        )}\n        keyExtractor={(item) => item.id.toString()}\n      />\n    );\n  };\n\n  return (\n    <VStack mt={1} space={3} flex={1}>\n      {renderSearchBar()}\n      {renderList()}\n    </VStack>\n  );\n};\n","import { View, Heading } from \"native-base\";\nimport { ExerciseList as ExerciseListComponent } from \"../../components/Lists/ExerciseList\";\nimport useColorScheme from \"../../hooks/useColorScheme\";\n\nconst Exercises = () => {\n  const { h1ColorMode, screenColorMode } = useColorScheme();\n  const renderHeading = () => (\n    <Heading size={\"xl\"} color={h1ColorMode} my={2}>\n      Exercises\n    </Heading>\n  );\n\n  const renderExerciseList = () => {\n    return <ExerciseListComponent showExerciseDetails />;\n  };\n\n  return (\n    <View\n      flex={1}\n      backgroundColor={screenColorMode}\n      padding={3}\n      _web={{\n        maxW: \"lg\",\n        w: \"100%\",\n        mx: \"auto\",\n      }}\n    >\n      {renderHeading()}\n      {renderExerciseList()}\n    </View>\n  );\n};\n\nexport default Exercises;\n","import { Heading, Pressable, Text, View } from \"native-base\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport { addLift } from \"../../store/currentWorkoutSlice\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { ExerciseList } from \"../../components/Lists/ExerciseList\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport interface LiftData {\n  exerciseId: number;\n  exerciseName: string;\n  liftId: string;\n}\n\ntype Props = RootStackScreenProps<\"AddExercises\">;\n\nconst AddExercises: React.FC<Props> = () => {\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n  const { exercises } = useAppSelector((state) => state.currentWorkoutSlice);\n\n  const navigation = useNavigation();\n  const dispatch = useAppDispatch();\n\n  const handleAddExercises = () => {\n    const params = Object.values(exercises).map((el) => {\n      return {\n        ...el,\n        userId,\n      };\n    });\n\n    dispatch(addLift(params));\n    navigation.goBack();\n  };\n\n  const renderHeading = () => (\n    <Heading size=\"sm\" color={\"text.500\"} my={2}>\n      All Exercises\n    </Heading>\n  );\n\n  const renderList = () => <ExerciseList showExerciseDetails={false} />;\n\n  const renderAddExercises = () => {\n    const exercisesLength = Object.keys(exercises).length;\n\n    const buttonText =\n      exercisesLength < 1\n        ? \"Add Exercise\"\n        : `Add Selected Exercises (${exercisesLength})`;\n\n    return (\n      <Pressable\n        backgroundColor={\"info.400\"}\n        alignItems={\"center\"}\n        py={2}\n        mb={4}\n        onPress={handleAddExercises}\n      >\n        <Text fontWeight={700} color={\"white\"}>\n          {buttonText}\n        </Text>\n      </Pressable>\n    );\n  };\n\n  return (\n    <View\n      paddingTop={3}\n      paddingX={3}\n      backgroundColor={\"white\"}\n      h=\"full\"\n      flex={1}\n      flexGrow={1}\n      _web={{\n        maxW: \"lg\",\n        w: \"100%\",\n        mx: \"auto\",\n      }}\n    >\n      {renderHeading()}\n      {renderList()}\n      {renderAddExercises()}\n    </View>\n  );\n};\n\nexport default AddExercises;\n","import { useNavigation } from \"@react-navigation/native\";\nimport { VStack } from \"native-base\";\nimport { useAppDispatch } from \"../../store\";\nimport { deleteFolder } from \"../../store/templateSlice\";\nimport ModalItem from \"./ModalItem\";\nimport ModalWrapper from \"./ModalWrapper\";\n\ninterface IManageFolderModal {\n  isVisible: boolean;\n  setIsVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  folId: string;\n}\n\nconst ManageFolderModal = (props: IManageFolderModal) => {\n  const { isVisible, setIsVisible, folId } = props;\n\n  const dispatch = useAppDispatch();\n  const { navigate } = useNavigation();\n\n  const handleDeleteFolder = () => {\n    dispatch(deleteFolder(folId));\n    setIsVisible(false);\n  };\n\n  const handleCreateTemplate = () => {\n    setIsVisible(false);\n    navigate(\"CreateTemplate\", { folderId: folId });\n  };\n\n  const renderBody = () => {\n    return (\n      <VStack space={2}>\n        <ModalItem hasChevron pressHandler={handleCreateTemplate}>\n          Add Template\n        </ModalItem>\n        <ModalItem pressHandler={handleDeleteFolder}>Delete Folder</ModalItem>\n      </VStack>\n    );\n  };\n\n  return (\n    <ModalWrapper\n      isOpen={isVisible}\n      onClose={setIsVisible}\n      header=\"Manage Folder\"\n      width={\"full\"}\n      flex={1}\n    >\n      {renderBody()}\n    </ModalWrapper>\n  );\n};\n\nexport default ManageFolderModal;\n","import { faXmark } from \"@fortawesome/free-solid-svg-icons/faXmark\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { useAppDispatch } from \"../../store\";\nimport { deleteTemplate } from \"../../store/templateSlice\";\nimport ModalItem from \"./ModalItem\";\nimport ModalWrapper from \"./ModalWrapper\";\n\ninterface IProps {\n  isVisible: boolean;\n  setIsVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  templateId: string;\n}\n\nconst TemplateModal = (props: IProps) => {\n  const { isVisible, setIsVisible } = props;\n  const dispatch = useAppDispatch()\n\n  const handleDelete = (templateId: string) => {\n    dispatch(deleteTemplate(templateId));\n    setIsVisible(false);\n  };\n\n  const renderDelete = () => {\n    const { templateId } = props;\n\n    return (\n      <ModalItem\n        pressHandler={() => handleDelete(templateId)}\n        leftIcon={<FontAwesomeIcon icon={faXmark} size={13} color=\"red\" />}\n      >\n        Delete\n      </ModalItem>\n    );\n  };\n\n  return (\n    <ModalWrapper\n      isOpen={isVisible}\n      onClose={() => setIsVisible(false)}\n      header={\"Template Settings\"}\n    >\n      {renderDelete()}\n    </ModalWrapper>\n  );\n};\n\nexport default TemplateModal;\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { Text, VStack, Heading, Pressable, HStack } from \"native-base\";\nimport React, { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons/faClock\";\nimport { SetInterface } from \"../../types/CurrentWorkoutInterface\";\nimport useId from \"../../hooks/useId\";\nimport { addLift, setWorkoutTitle, startWorkout } from \"../../store/currentWorkoutSlice\";\nimport useColorScheme from \"../../hooks/useColorScheme\";\nimport Elipsis from \"../Layout/Buttons/Elipsis\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport TemplateModal from \"../Modals/TemplateModal\";\n\ninterface TemplateCardProps {\n  title: string;\n  templateId: string;\n  exercises: {\n    [key: string]: {\n      exerciseId: number;\n      exerciseName: string;\n      sets: SetInterface;\n    };\n  };\n}\n\nconst TemplateCard: React.FC<TemplateCardProps> = ({\n  title,\n  exercises,\n  templateId,\n}) => {\n  const dispatch = useAppDispatch();\n  const user = useAppSelector((state) => state.userSlice.user);\n  const { pTextColorMode } = useColorScheme();\n  const { navigate } = useNavigation();\n  const [tempalteModalIsVisible, setTemplateModalIsVisible] =\n    useState<boolean>(false);\n\n  const handleAddLiftsToWorkout = () => {\n    const { userId } = user;\n\n    const params = Object.values(exercises).map(\n      ({ exerciseId, exerciseName, sets }) => {\n        return {\n          exerciseId,\n          exerciseName,\n          sets,\n          userId,\n          liftId: useId(\"lift\"),\n        };\n      }\n    );\n\n    dispatch(addLift(params));\n  };\n\n  const handlePress = () => {\n    const { userId } = user;\n    handleAddLiftsToWorkout();\n    dispatch(setWorkoutTitle(title))\n    dispatch(startWorkout({ userId }));\n    navigate(\"ActiveWorkout\");\n  };\n\n  const renderTemplateModal = () => {\n    return (\n      <TemplateModal\n        templateId={templateId}\n        isVisible={tempalteModalIsVisible}\n        setIsVisible={setTemplateModalIsVisible}\n      />\n    );\n  };\n\n  const renderExercises = (\n    exercise: {\n      exerciseId: number;\n      exerciseName: string;\n      sets: SetInterface;\n    },\n    index: number\n  ) => {\n    const { exerciseName, exerciseId } = exercise;\n    const exercisesLength = Object.keys(exercises).length;\n    const showComma = (index: number) =>\n      exercisesLength === 1 || index + 1 === exercisesLength ? \" \" : \", \";\n\n    return (\n      <React.Fragment key={exerciseId}>\n        {exerciseName}\n        {showComma(index)}\n      </React.Fragment>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <HStack alignItems={\"center\"} mb={1}>\n        <Heading fontSize=\"sm\" color={pTextColorMode} flex={1}>\n          {title}\n        </Heading>\n        <Elipsis size={10} onPress={() => setTemplateModalIsVisible(true)} />\n      </HStack>\n    );\n  };\n\n  const renderBody = () => {\n    return (\n      <Text fontSize={\"xs\"} color={pTextColorMode} flex={1} numberOfLines={3}>\n        {Object.values(exercises).map(renderExercises)}\n      </Text>\n    );\n  };\n\n  const renderDate = () => {\n    return (\n      <HStack alignItems={\"center\"} space={2}>\n        <FontAwesomeIcon icon={faClock} size={10} color=\"#d1d5db\" />\n        <Text fontSize={\"xs\"} color=\"coolGray.500\">\n          {\"2022/10/1\"}\n        </Text>\n      </HStack>\n    );\n  };\n\n  return (\n    <Pressable\n      borderWidth={1}\n      borderColor={\"coolGray.200\"}\n      backgroundColor={\"transparent\"}\n      py={3}\n      px={2}\n      borderRadius={\"sm\"}\n      w={\"49%\"}\n      onPress={handlePress}\n      my={1}\n      mr={1}\n      h={\"32\"}\n    >\n      <VStack space={1} h=\"full\" overflow={\"hidden\"}>\n        {renderHeader()}\n        {renderBody()}\n        {renderDate()}\n      </VStack>\n      {renderTemplateModal()}\n    </Pressable>\n  );\n};\n\nexport default TemplateCard;\n","import { faChevronDown } from \"@fortawesome/free-solid-svg-icons/faChevronDown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport {\n  Box,\n  Collapse,\n  FlatList,\n  Heading,\n  HStack,\n  Pressable,\n} from \"native-base\";\nimport { useState } from \"react\";\nimport useColorScheme from \"../../hooks/useColorScheme\";\nimport { TemplateInterface } from \"../../types/TemplateSliceInterface\";\nimport ManageFolderModal from \"../Modals/ManageFolderModal\";\nimport Elipsis from \"../Layout/Buttons/Elipsis\";\nimport TemplateCard from \"./TemplateCard\";\n\ninterface IProps {\n  templates: TemplateInterface;\n  id: string;\n  name: string;\n}\n\nexport default function Folder(props: IProps) {\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(false);\n  const [modalIsOpen, setModalIsOpen] = useState<boolean>(false);\n  const [folderModalIsOpen, setFolderModalIsOpen] = useState<boolean>(false);\n\n  const { templates, id, name } = props;\n\n  const { pTextColorMode } = useColorScheme();\n\n  const renderHeader = () => {\n    return (\n      <Pressable onPress={() => setIsCollapsed((state) => !state)}>\n        <HStack justifyContent={\"space-between\"}>\n          <HStack alignItems={\"center\"} space={2}>\n            <Heading size={\"sm\"} color={pTextColorMode}>\n              {name}\n            </Heading>\n            <Box>\n              <FontAwesomeIcon\n                icon={faChevronDown}\n                color={\"#4b5563\"}\n                style={\n                  isCollapsed\n                    ? { transform: [{ rotate: \"-90deg\" }] }\n                    : undefined\n                }\n                size={11}\n              />\n            </Box>\n          </HStack>\n\n          <Elipsis\n            size={14}\n            margin={1}\n            onPress={() => setFolderModalIsOpen(true)}\n          />\n          {/* <CtaButton\n            isHollow\n            leftIcon={\n              <FontAwesomeIcon icon={faFile} color={\"#0284c7\"} size={10} />\n            }\n            onPress={() => setModalIsOpen(true)}\n          >\n            Add Template\n          </CtaButton> */}\n        </HStack>\n      </Pressable>\n    );\n  };\n\n  const renderTemplates = () => {\n    return (\n      <Collapse isOpen={!isCollapsed}>\n        <FlatList\n          data={Object.values(templates)}\n          numColumns={2}\n          w={\"100%\"}\n          keyExtractor={(item) => item.tempId}\n          renderItem={({ item }) => (\n            <TemplateCard\n              key={item.tempId}\n              title={item.templateName}\n              exercises={item.exercises}\n              templateId={String(item.tempId)}\n            />\n          )}\n        />\n      </Collapse>\n    );\n  };\n\n  const renderFolderModal = () => {\n    return (\n      <ManageFolderModal\n        isVisible={folderModalIsOpen}\n        setIsVisible={setFolderModalIsOpen}\n        folId={id}\n      />\n    );\n  };\n\n  return (\n    <Box key={id}>\n      {renderHeader()}\n      {renderTemplates()}\n      {renderFolderModal()}\n    </Box>\n  );\n}\n","import { Input, VStack } from \"native-base\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport { createFolder } from \"../../store/templateSlice\";\nimport ModalWrapper from \"./ModalWrapper\";\n\ninterface IProps {\n  isVisible: boolean;\n  setIsVisible: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default function AddFolderModal(props: IProps) {\n  const { isVisible, setIsVisible } = props;\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n\n  const [folderTitle, setFolderTitle] = useState<string>(\"\");\n\n  const dispatch = useAppDispatch();\n\n  const handleSaveFolder = () => {\n    dispatch(createFolder({ title: folderTitle, userId }));\n    setIsVisible(false);\n  };\n\n  return (\n    <ModalWrapper\n      isOpen={isVisible}\n      onClose={setIsVisible}\n      header=\"Create Folder\"\n      saveHandler={handleSaveFolder}\n    >\n      <VStack>\n        <Input\n          placeholder=\"Folder Title\"\n          fontSize={\"md\"}\n          type=\"text\"\n          onChangeText={(text) => setFolderTitle(text)}\n        />\n      </VStack>\n    </ModalWrapper>\n  );\n}\n","import { useEffect } from \"react\"\nimport { useAppDispatch, useAppSelector } from \"../store\"\nimport { getUserTemplateData } from \"../store/templateSlice\"\n\n\nconst useTemplatesAndFolders = () => {\n\n    const dispatch = useAppDispatch()\n    const { userId } = useAppSelector(state => state.userSlice.user)\n\n    useEffect(() => {\n        dispatch(getUserTemplateData(userId))\n    }, [])\n}\n\nexport default useTemplatesAndFolders","import { useNavigation } from \"@react-navigation/native\";\nimport { Text, Heading, Box, Button, View, HStack, VStack } from \"native-base\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport { startWorkout } from \"../../store/currentWorkoutSlice\";\nimport { faFolder } from \"@fortawesome/free-regular-svg-icons/faFolder\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport Folder from \"../../components/Templates/Folder\";\nimport AddFolderModal from \"../../components/Modals/AddFolderModal\";\nimport { useState } from \"react\";\nimport CtaButton from \"../../components/Layout/Buttons/CtaButton\";\nimport useColorScheme from \"../../hooks/useColorScheme\";\nimport useTemplatesAndFolders from \"../../hooks/useTemplatesAndFolders\";\n\nexport default function Start() {\n  const [folderModalIsVisible, setFolderModalIsVisible] =\n    useState<boolean>(false);\n\n  const { userId } = useAppSelector((state) => state.userSlice.user);\n  const { folders } = useAppSelector((state) => state.templateSlice);\n  const { isActive } = useAppSelector((state) => state.currentWorkoutSlice);\n\n  const {\n    h1ColorMode,\n    h2ColorMode,\n    buttonColorMode,\n    ctaIconColorMode,\n    screenColorMode,\n  } = useColorScheme();\n\n  const navigation = useNavigation();\n  const dispatch = useAppDispatch();\n\n  // NOTE: This is a temporary solution to get the folders and templates\n  useTemplatesAndFolders();\n\n  const handlePressQuickStart = () => {\n    dispatch(startWorkout({ userId }));\n    navigation.navigate(\"ActiveWorkout\");\n  };\n\n  const handleContinueWorkout = () => {\n    navigation.navigate(\"ActiveWorkout\");\n  };\n\n  const renderHeading = () => (\n    <Heading size={\"xl\"} color={h1ColorMode} my={1}>\n      Start A Workout\n    </Heading>\n  );\n\n  const renderQuickStart = () => (\n    <Box my={1}>\n      <Heading fontSize={\"lg\"} color={h2ColorMode}>\n        Quick Start\n      </Heading>\n      {renderStartOrContinue()}\n    </Box>\n  );\n\n  const renderStartOrContinue = () => {\n    if (!isActive) {\n      return (\n        <Button\n          onPress={handlePressQuickStart}\n          marginY={1}\n          size=\"sm\"\n          backgroundColor={buttonColorMode}\n        >\n          <Text fontWeight={\"bold\"} color=\"coolGray.100\">\n            Start an Empty Workout\n          </Text>\n        </Button>\n      );\n    }\n\n    return (\n      <Button\n        onPress={handleContinueWorkout}\n        marginY={1}\n        size=\"sm\"\n        backgroundColor={\"green.400\"}\n      >\n        <Text fontWeight={\"bold\"} color=\"green.50\">\n          Continue Workout\n        </Text>\n      </Button>\n    );\n  };\n\n  const renderTemplatesSectionHeader = () => (\n    <HStack\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      alignItems={\"center\"}\n    >\n      <Heading size={\"lg\"} color={h2ColorMode}>\n        Folders\n      </Heading>\n      <CtaButton\n        onPress={() => setFolderModalIsVisible(true)}\n        leftIcon={\n          <FontAwesomeIcon icon={faFolder} color={ctaIconColorMode} size={12} />\n        }\n      >\n        Add Folder\n      </CtaButton>\n    </HStack>\n  );\n\n  const renderFolders = () => {\n    return (\n      <>\n        {renderTemplatesSectionHeader()}\n        {Object.values(folders).map(({ id, name, templates }) => {\n          return <Folder key={id} templates={templates} id={id} name={name} />;\n        })}\n      </>\n    );\n  };\n\n  const renderAddFolderModal = () => {\n    return (\n      <AddFolderModal\n        isVisible={folderModalIsVisible}\n        setIsVisible={setFolderModalIsVisible}\n      />\n    );\n  };\n\n  return (\n    <View\n      padding={3}\n      backgroundColor={screenColorMode}\n      flex={1}\n      _web={{\n        maxW: \"lg\",\n        w: \"100%\",\n        mx: \"auto\",\n      }}\n    >\n      <VStack space={2}>\n        {renderHeading()}\n        {renderQuickStart()}\n        {renderFolders()}\n      </VStack>\n      {renderAddFolderModal()}\n    </View>\n  );\n}\n","import { IImageProps, Image } from \"native-base\";\n\nexport default function Logo({ ...rest }: IImageProps) {\n  return (\n    <Image\n      {...rest}\n      source={require(\"../../../images/logo.png\")}\n      alt={\"JACKED Logo\"}\n    />\n  );\n}\n","import { Button, IButtonProps, Text } from \"native-base\";\n\ninterface IPrimaryButton extends IButtonProps {\n  children: React.ReactNode;\n  textDark?: boolean;\n}\n\nconst PrimaryButton = ({ children, textDark, ...rest }: IPrimaryButton) => {\n  return (\n    <Button\n      borderRadius={10}\n      h={\"16\"}\n      {...rest}\n    >\n      <Text\n        color={textDark ? \"coolGray.900\" : \"gray.50\"}\n        fontWeight={700}\n        fontSize={18}\n      >\n        {children}\n      </Text>\n    </Button>\n  );\n};\n\nexport default PrimaryButton;\n","import { FormControl, IInputProps, Input } from \"native-base\";\n\ninterface IInputField extends IInputProps {\n  label: string;\n}\n\nconst InputField = ({ label, ...rest }: IInputField) => {\n  return (\n    <FormControl w={'full'}>\n      <FormControl.Label fontSize={18} fontWeight={700}>{label}</FormControl.Label>\n      <Input\n        {...rest}\n        h={\"12\"}\n        w=\"full\"\n        variant=\"filled\"\n        _focus={{\n          borderColor: \"info.200\",\n        }}\n      />\n    </FormControl>\n  );\n};\n\nexport default InputField;\n","import { FontAwesome } from \"@expo/vector-icons\";\nimport { faLock } from \"@fortawesome/free-solid-svg-icons/faLock\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons/faEye\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { Box, Checkbox, Text, useToast, VStack } from \"native-base\";\nimport { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../store\";\nimport { userLogin, userSignup } from \"../../store/userSlice\";\nimport PrimaryButton from \"../Layout/Buttons/PrimaryButton\";\nimport InputField from \"../Layout/InputField\";\nimport ToastAlert from \"../Utils/ToastAlert\";\n\ninterface IAuthForm {\n  type: \"SIGN_UP\" | \"LOG_IN\";\n  SocialsComponent: () => JSX.Element;\n}\n\ninterface IFormData {\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst AuthForm = ({ type, SocialsComponent }: IAuthForm) => {\n  const [rememberMe, setRememberMe] = useState<\"TRUE\" | \"FALSE\">(\"FALSE\");\n  const [formData, setFormData] = useState<IFormData>({\n    email: \"ahmedmcgarry@hotmail.com\",\n    password: \"adriano911\",\n    confirmPassword: \"\",\n  });\n\n  const toast = useToast();\n  const dispatch = useAppDispatch();\n  const { status } = useAppSelector((state) => state.userSlice);\n\n  useEffect(() => {\n    if (status === \"rejected\") {\n      toast.show({\n        placement: \"top\",\n        render: () => (\n          <ToastAlert\n            title=\"Error logging in or signing up\"\n            description=\"An error occured, please try again\"\n            status=\"error\"\n            variant=\"solid\"\n          />\n        ),\n      });\n    }\n  }, [status]);\n\n  useEffect(() => {\n      toast.show({\n        placement: \"top\",\n        render: () => (\n          <ToastAlert\n            title=\"Notice!\"\n            description=\"For the purpose of this demo, use the login credentials provided\"\n            status=\"info\"\n            variant=\"solid\"\n          />\n        ),\n      });\n  }, []);\n\n  const handleLogin = () => {\n    const { password, email } = formData;\n\n    if (!password || !email) return;\n\n    dispatch(userLogin({ email, password, rememberMe }));\n  };\n\n  const handleSignup = () => {\n    const { password, email, confirmPassword } = formData;\n\n    if (!password || !email || !confirmPassword) return;\n    if (password !== confirmPassword) return;\n    if (password.length < 6) return;\n\n    dispatch(userSignup({ email, password, rememberMe }));\n  };\n\n  const renderEmailField = () => {\n    const { email } = formData;\n    return (\n      <InputField\n        label=\"Email\"\n        value={email}\n        onChangeText={(text) => setFormData({ ...formData, email: text })}\n        fontSize={16}\n        placeholder={\"ahmedmcgarry@hotmail.com\"}\n        InputLeftElement={\n          <FontAwesome\n            name=\"envelope\"\n            size={22}\n            style={{ marginHorizontal: 8, color: \"gray\" }}\n          />\n        }\n      />\n    );\n  };\n\n  const renderPasswordField = () => {\n    const { password } = formData;\n    return (\n      <InputField\n        label=\"Password\"\n        value={password}\n        type={\"password\"}\n        placeholder=\"●●●●●●●●\"\n        fontSize={16}\n        onChangeText={(text) => setFormData({ ...formData, password: text })}\n        InputLeftElement={\n          <FontAwesomeIcon\n            icon={faLock}\n            size={22}\n            style={{ marginHorizontal: 8, marginRight: 8, color: \"gray\" }}\n          />\n        }\n        InputRightElement={\n          <FontAwesomeIcon\n            icon={faEye}\n            size={22}\n            style={{ marginHorizontal: 8, color: \"gray\" }}\n          />\n        }\n      />\n    );\n  };\n\n  const renderConfrimPasswordField = () => {\n    const { confirmPassword } = formData;\n    return (\n      <InputField\n        label=\"Confirm Password\"\n        type={\"password\"}\n        placeholder=\"●●●●●●●●\"\n        value={confirmPassword}\n        fontSize={16}\n        onChangeText={(text) =>\n          setFormData({ ...formData, confirmPassword: text })\n        }\n        InputLeftElement={\n          <FontAwesomeIcon\n            icon={faLock}\n            size={22}\n            style={{ marginHorizontal: 8, color: \"gray\" }}\n          />\n        }\n        InputRightElement={\n          <FontAwesomeIcon\n            icon={faEye}\n            size={22}\n            style={{ marginHorizontal: 8, color: \"gray\" }}\n          />\n        }\n      />\n    );\n  };\n\n  const renderSignUp = () => {\n    if (type === \"LOG_IN\") return;\n\n    return (\n      <VStack flex={1} space={3}>\n        {renderEmailField()}\n        {renderPasswordField()}\n        {renderConfrimPasswordField()}\n        {renderRememberMe()}\n      </VStack>\n    );\n  };\n\n  const renderLogIn = () => {\n    if (type === \"SIGN_UP\") return;\n\n    return (\n      <VStack flex={1} space={3}>\n        {renderEmailField()}\n        {renderPasswordField()}\n        {renderRememberMe()}\n      </VStack>\n    );\n  };\n\n  const renderSocialsComponent = () => {\n    return <SocialsComponent />;\n  };\n\n  const renderSubmitButton = () => {\n    if (type === \"SIGN_UP\") {\n      return (\n        <PrimaryButton\n          alignItems=\"center\"\n          backgroundColor={\"coolGray.900\"}\n          onPress={handleSignup}\n        >\n          Sign Up\n        </PrimaryButton>\n      );\n    }\n\n    return (\n      <PrimaryButton\n        alignItems=\"center\"\n        backgroundColor={\"coolGray.900\"}\n        onPress={handleLogin}\n      >\n        Log In\n      </PrimaryButton>\n    );\n  };\n\n  const renderRememberMe = () => {\n    return (\n      <Checkbox\n        value={rememberMe}\n        size=\"sm\"\n        mt={2}\n        onChange={() => {\n          rememberMe === \"FALSE\"\n            ? setRememberMe(\"TRUE\")\n            : setRememberMe(\"FALSE\");\n        }}\n      >\n        <Text color={\"gray.500\"}>Remember Me</Text>\n      </Checkbox>\n    );\n  };\n\n  return (\n    <Box flexGrow={1} padding={4} flex={3} justifyContent={\"space-between\"}>\n      {renderSignUp()}\n      {renderLogIn()}\n      {renderSocialsComponent()}\n      {renderSubmitButton()}\n    </Box>\n  );\n};\n\nexport default AuthForm;\n","import { Text } from \"native-base\";\nimport { SetStateAction } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\n\ninterface IAuthStateSwitch {\n  type: \"SIGN_UP\" | \"LOG_IN\";\n  setType?: React.Dispatch<SetStateAction<\"SIGN_UP\" | \"LOG_IN\">>;\n}\n\nconst AuthStateSwitcher = ({ type, setType }: IAuthStateSwitch) => {\n  const { navigate } = useNavigation();\n\n  const handleSwitch = () => {\n    if (!setType) return navigate(\"Auth\", { type: \"LOG_IN\" });\n    if (type === \"SIGN_UP\") return setType(\"LOG_IN\");\n\n    setType(\"SIGN_UP\");\n  };\n\n  if (type === \"SIGN_UP\") {\n    return (\n      <Text textAlign={\"center\"} my={5}>\n        Already have an account?{\" \"}\n        <Text fontWeight={700} underline onPress={handleSwitch}>\n          Log in\n        </Text>\n      </Text>\n    );\n  }\n\n  return (\n    <Text textAlign={\"center\"} my={5}>\n      Dont have an account?{\" \"}\n      <Text fontWeight={700} underline onPress={handleSwitch}>\n        Sign up\n      </Text>\n    </Text>\n  );\n};\n\nexport default AuthStateSwitcher;\n","import { faGoogle } from \"@fortawesome/free-brands-svg-icons/faGoogle\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { Box, HStack, Pressable, Text, VStack } from \"native-base\";\n\nconst SocialIcons = () => {\n  const renderHeader = () => {\n    return (\n      <HStack space={\"4\"} alignItems={\"center\"}>\n        <Box w={\"1/4\"} borderWidth={1} borderColor={\"coolGray.200\"} h={\"0\"} />\n        <Text\n          flexGrow={1}\n          flex={1}\n          noOfLines={1}\n          textAlign={\"center\"}\n          textTransform={\"uppercase\"}\n          letterSpacing={\"lg\"}\n          fontWeight={600}\n          fontSize={12}\n        >\n          Or Sign in with\n        </Text>\n        <Box w={\"1/4\"} borderWidth={1} borderColor={\"coolGray.200\"} h={\"0\"} />\n      </HStack>\n    );\n  };\n\n  const renderIcons = () => {\n    return (\n      <HStack space={\"4\"} alignItems={\"center\"} justifyContent={\"center\"}>\n        <Pressable\n          w={\"16\"}\n          h={\"16\"}\n          borderRadius={\"full\"}\n          backgroundColor={\"coolGray.200\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n        >\n          <FontAwesomeIcon\n            icon={faGoogle}\n            size={24}\n            style={{ color: \"#111827\" }}\n          />\n        </Pressable>\n      </HStack>\n    );\n  };\n\n  return (\n    <VStack my={10} space={5}>\n      {renderHeader()}\n      {renderIcons()}\n    </VStack>\n  );\n};\n\nexport default SocialIcons;\n","import { View, Text, Box, Heading, VStack } from \"native-base\";\nimport React, { useState } from \"react\";\nimport Logo from \"../Layout/Logo/Logo\";\nimport AuthForm from \"./AuthForm\";\nimport AuthStateSwitcher from \"./AuthStateSwitcher\";\nimport SocialIcons from \"./SocialIcons\";\n\nconst Auth = ({ route }: any) => {\n  const { type: routeType } = route && route.params ? route.params : \"LOG_IN\";\n\n  const [type, setType] = useState<\"SIGN_UP\" | \"LOG_IN\">(routeType);\n\n  const renderLogo = () => (\n    <Box h={\"16\"} marginX={\"auto\"} marginTop={20} marginBottom={5} alignItems=\"flex-end\">\n      <Logo flex={1} position={\"relative\"} resizeMode=\"contain\" />\n    </Box>\n  );\n\n  const renderHeroCopy = () => {\n    if (type === \"LOG_IN\") {\n      <VStack space={3}>\n        <Heading\n          color={\"coolGray.900\"}\n          fontSize={32}\n          fontWeight={900}\n          textAlign={\"center\"}\n        >\n          Welcome to Jacked\n        </Heading>\n        <Text\n          color={\"coolGray.400\"}\n          fontSize={14}\n          fontWeight={700}\n          textAlign={\"center\"}\n        >\n          Sign in to start your fitness journey\n        </Text>\n      </VStack>;\n    }\n\n    return (\n      <VStack space={3}>\n        <Heading\n          color={\"coolGray.900\"}\n          fontSize={32}\n          fontWeight={900}\n          textAlign={\"center\"}\n        >\n          Welcome Back\n        </Heading>\n        <Text\n          color={\"coolGray.400\"}\n          fontSize={14}\n          fontWeight={700}\n          textAlign={\"center\"}\n        >\n          Login to pick up where you left off\n        </Text>\n      </VStack>\n    );\n  };\n\n  const renderAuthForm = () => (\n    <AuthForm type={type} SocialsComponent={SocialIcons} />\n  );\n\n  const renderSwitchState = () => (\n    <AuthStateSwitcher type={type} setType={setType} />\n  );\n\n  return (\n    <View\n      flex={1}\n      backgroundColor={\"white\"}\n      _web={{\n        maxW: \"lg\",\n        width: \"100%\",\n        margin: \"auto\",\n      }}\n    >\n      {renderLogo()}\n      {renderHeroCopy()}\n      {renderAuthForm()}\n      {renderSwitchState()}\n    </View>\n  );\n};\n\nexport default Auth;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst getFromAsyncStorage = async (key: string) => {\n  try {\n    const value = await AsyncStorage.getItem(key);\n    return value;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n};\n\n\nexport default getFromAsyncStorage","const getFromLocalStorage = async (key: string) => {\n  const token = localStorage.getItem(key) || null;\n  return token;\n};\n\nexport default getFromLocalStorage;\n","import { useEffect, useState } from \"react\";\nimport { useAppDispatch } from \"../store\";\nimport { rememberSession } from \"../store/userSlice\";\nimport getFromAsyncStorage from \"../utils/Auth/getFromAsyncStorage\";\nimport getFromLocalStorage from \"../utils/Auth/getFromLocalStorage\";\nimport useIsApp from \"./useIsApp\";\n\nconst useRememberMe = () => {\n  const dispatch = useAppDispatch();\n  const isApp = useIsApp();\n\n  useEffect(() => {\n    if (isApp) {\n      const handleMobileRememberMe = async () => {\n        try {\n          const session = await getFromAsyncStorage(\"JACKED__SESSION_TOKEN\");\n\n          if (session) {\n            dispatch(rememberSession(session));\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n      handleMobileRememberMe();\n    }\n\n    if (!isApp) {\n      const token = getFromLocalStorage(\"JACKED__SESSION_TOKEN\");\n      Object.keys(token).length && dispatch(rememberSession(token));\n    }\n  });\n};\n\nexport default useRememberMe;\n","import { Image, Box, View, Text, VStack } from \"native-base\";\nimport Logo from \"../Layout/Logo/Logo\";\nimport AuthStateSwitcher from \"./AuthStateSwitcher\";\nimport PrimaryButton from \"../Layout/Buttons/PrimaryButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons/faEnvelope\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons/faGoogle\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { useAppDispatch } from \"../../store\";\nimport { signInWithGoogle } from \"../../store/userSlice\";\nimport useRememberMe from \"../../hooks/useRememberMe\";\n\nconst Welcome = () => {\n  const { navigate } = useNavigation();\n  const dispatch = useAppDispatch();\n  useRememberMe()\n\n  const handleSignUpWithEmail = () => {\n    navigate(\"Auth\", { type: \"SIGN_UP\" });\n  };\n\n  const handleSignUpWithGoogle = async () => {\n    dispatch(signInWithGoogle());\n  };\n\n  const renderHero = () => {\n    return (\n      <Box w={\"full\"} h={\"lg\"} position={\"relative\"}>\n        <Image\n          source={require(\"../../images/welcome-hero.png\")}\n          alt={\"Hero Banner\"}\n          size={\"full\"}\n        />\n      </Box>\n    );\n  };\n\n  const renderLogo = () => (\n    <Box w={\"1/3\"} margin={\"auto\"}>\n      <Logo\n        size={\"full\"}\n        position={\"absolute\"}\n        top={-30}\n        left={0}\n        right={0}\n        margin={\"auto\"}\n        flex={1}\n        h={\"16\"}\n        resizeMode={\"contain\"}\n      />\n    </Box>\n  );\n\n  const renderHeroContent = () => {\n    return (\n      <>\n        {renderLogo()}\n        <Box flexGrow={1} mt={12}>\n          <Text\n            fontWeight={700}\n            color={\"coolGray.400\"}\n            textAlign={\"center\"}\n            fontSize={18}\n          >\n            The all in one app for tracking your personal fitness Journey!\n          </Text>\n        </Box>\n      </>\n    );\n  };\n\n  const renderLoginOptions = () => {\n    return (\n      <VStack space={2} px={3}>\n        <PrimaryButton\n          onPress={handleSignUpWithEmail}\n          alignItems=\"center\"\n          backgroundColor={\"coolGray.900\"}\n          startIcon={\n            <FontAwesomeIcon\n              icon={faEnvelope}\n              style={{ color: \"#f9fafb\", marginRight: 2 }}\n              size={22}\n            />\n          }\n        >\n          Sign up with Email\n        </PrimaryButton>\n        <PrimaryButton\n          onPress={handleSignUpWithGoogle}\n          borderColor={\"coolGray.900\"}\n          borderWidth={\"2\"}\n          backgroundColor={\"white\"}\n          textDark\n          startIcon={\n            <FontAwesomeIcon\n              icon={faGoogle}\n              style={{ color: \"#111827\", marginRight: 2 }}\n              size={22}\n            />\n          }\n        >\n          Sign up with Google\n        </PrimaryButton>\n      </VStack>\n    );\n  };\n\n  const renderAuthStateSwitcher = () => <AuthStateSwitcher type=\"SIGN_UP\" />;\n\n  return (\n    <View\n      flex={1}\n      backgroundColor={\"white\"}\n      _web={{\n        maxW: \"lg\",\n        width: \"100%\",\n        margin: \"auto\",\n      }}\n    >\n      {renderHero()}\n      {renderHeroContent()}\n      {renderLoginOptions()}\n      {renderAuthStateSwitcher()}\n    </View>\n  );\n};\n\nexport default Welcome;\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { BottomTabHeaderProps } from \"@react-navigation/bottom-tabs\";\nimport { Button, Heading, HStack, View, Text, Box } from \"native-base\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { NativeStackHeaderProps } from \"@react-navigation/native-stack\";\n\ninterface IHeaderBottomTab extends BottomTabHeaderProps {\n  showBack: boolean;\n  showRouteTitle: boolean;\n  ComponentRight?: () => JSX.Element;\n}\n\ninterface IHeaderStack extends NativeStackHeaderProps {\n  showBack: boolean;\n  showRouteTitle: boolean;\n  ComponentRight?: () => JSX.Element;\n}\n\nconst Header = (props: IHeaderBottomTab | IHeaderStack) => {\n  const renderRouteTitle = () => {\n    const {\n      showRouteTitle,\n      route: { name },\n    } = props;\n\n    if (!showRouteTitle) return <Box flex={1}></Box>;\n\n    return <Heading>{name}</Heading>;\n  };\n\n  const renderBackButton = () => {\n    const { navigation, showBack } = props;\n\n    if (!showBack) return <Box flex={1}></Box>;\n\n    const { goBack } = navigation;\n\n    return (\n      <Button\n        leftIcon={<FontAwesomeIcon icon={faArrowLeft} />}\n        variant={\"ghost\"}\n        onPress={goBack}\n      />\n    );\n  };\n\n  const renderComponentRight = () => {\n    const { ComponentRight } = props;\n\n    if (!ComponentRight) return <Box flex={1}></Box>;\n\n    return <ComponentRight />;\n  };\n\n  return (\n    <View\n      py={3}\n      px={2}\n      h={\"20\"}\n      borderBottomWidth={1}\n      borderBottomColor={\"gray.200\"}\n      justifyContent={\"center\"}\n      backgroundColor={\"white\"}\n      _web={{\n        maxW: \"lg\",\n        w: \"100%\",\n        mx: \"auto\",\n        h: \"16\",\n      }}\n    >\n      <HStack\n        alignItems={\"flex-end\"}\n        justifyContent={\"space-between\"}\n        h={\"100%\"}\n        _web={{ alignItems: \"baseline\" }}\n      >\n        {renderBackButton()}\n        {renderRouteTitle()}\n        {renderComponentRight()}\n      </HStack>\n    </View>\n  );\n};\n\nexport default Header;\n","import { View } from \"native-base\";\nimport CreateWorkout from \"../../components/CreateWorkout/CreateWorkout\";\n\nconst CreateTemplate = () => {\n  return (\n    <View\n      backgroundColor={\"coolGray.50\"}\n      h={\"full\"}\n      px={1}\n      py={3}\n      _web={{\n        maxW: \"lg\",\n        w: \"100%\",\n        mx: \"auto\",\n      }}\n    >\n      <CreateWorkout template />\n    </View>\n  );\n};\n\nexport default CreateTemplate;\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { faDumbbell } from \"@fortawesome/free-solid-svg-icons/faDumbbell\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons/faUser\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons/faChevronDown\";\nimport { faClockRotateLeft } from \"@fortawesome/free-solid-svg-icons/faClockRotateLeft\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport { Pressable } from \"native-base\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport Profile from \"../screens/root/Profile\";\nimport History from \"../screens/root/History\";\n\nimport {\n  RootAuthStack,\n  RootStackParamList,\n  RootTabParamList,\n  RootTabScreenProps,\n} from \"../types\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport Calendar from \"../screens/modals/Calendar\";\nimport ActiveWorkout from \"../screens/pages/ActiveWorkout\";\nimport Exercises from \"../screens/root/Exercises\";\nimport AddExercises from \"../screens/modals/AddExercises\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport { useAppDispatch, useAppSelector } from \"../store\";\nimport Start from \"../screens/root/Start\";\nimport ColorThemeSwitch from \"../components/Utils/ColorThemeSwitch\";\nimport Auth from \"../components/Auth/Auth\";\nimport Welcome from \"../components/Auth/Welcome\";\nimport Header from \"../components/Layout/ScreenHeader\";\nimport CreateTemplate from \"../screens/pages/CreateTemplate\";\n\nexport default function Navigation() {\n  return (\n    <NavigationContainer linking={LinkingConfiguration}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\nconst AuthStack = createNativeStackNavigator<RootAuthStack>();\n\nfunction RootNavigator() {\n  const dispatch = useAppDispatch();\n  const { isLoggedIn } = useAppSelector((state) => state.userSlice.user);\n  const { screenColorModeHex } = useColorScheme();\n\n  return (\n    <>\n      {!isLoggedIn ? (\n        <AuthStack.Navigator initialRouteName=\"Welcome\">\n          <AuthStack.Screen\n            name=\"Welcome\"\n            component={Welcome}\n            options={() => ({\n              headerShown: false,\n            })}\n          />\n          <AuthStack.Screen\n            name=\"Auth\"\n            component={Auth}\n            options={() => ({\n              headerShown: false,\n            })}\n          />\n        </AuthStack.Navigator>\n      ) : (\n        <>\n          <Stack.Navigator initialRouteName=\"Root\">\n            <Stack.Screen\n              name=\"Root\"\n              component={BottomTabNavigator}\n              options={{\n                headerShown: false,\n              }}\n            />\n            <Stack.Screen\n              name=\"CreateTemplate\"\n              component={CreateTemplate}\n              options={{\n                title: \"Create Template\",\n                header: (props) => (\n                  <Header showBack={true} showRouteTitle={false} {...props} />\n                ),\n              }}\n            />\n            <Stack.Screen\n              name=\"ActiveWorkout\"\n              component={ActiveWorkout}\n              options={({ navigation }) => ({\n                title: \"Active Workout\",\n                header: (props) => (\n                  <Header\n                    showBack={true}\n                    showRouteTitle={false}\n                    {...props}\n                  />\n                ),\n              })}\n            />\n            <Stack.Group screenOptions={{ presentation: \"modal\" }}>\n              <Stack.Screen\n                name=\"Calendar\"\n                component={Calendar}\n                options={() => ({\n                  header: (props) => (\n                    <Header showBack={true} showRouteTitle={true} {...props} />\n                  ),\n                })}\n              />\n              <Stack.Screen\n                name=\"AddExercises\"\n                component={AddExercises}\n                options={({ navigation }) => ({\n                  title: \"\",\n                  header: (props) => (\n                    <Header\n                      showBack={false}\n                      showRouteTitle={false}\n                      {...props}\n                      ComponentRight={() => (\n                        <Pressable onPress={() => navigation.goBack()}>\n                          <FontAwesomeIcon\n                            icon={faChevronDown}\n                            color={\"skyblue\"}\n                            size={20}\n                          />\n                        </Pressable>\n                      )}\n                    />\n                  ),\n                })}\n              />\n            </Stack.Group>\n          </Stack.Navigator>\n        </>\n      )}\n    </>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const { screenColorModeHex, bottomNavColorMode } = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Profile\"\n      screenOptions={{\n        tabBarStyle: [\n          {\n            backgroundColor: screenColorModeHex,\n            paddingTop: 5,\n            maxWidth: 512,\n            marginHorizontal: \"auto\",\n            width: \"100%\",\n          },\n        ],\n        tabBarActiveTintColor: bottomNavColorMode,\n        headerStyle: {\n          backgroundColor: screenColorModeHex,\n        },\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={({ navigation }: RootTabScreenProps<\"Profile\">) => ({\n          title: \"Profile\",\n          headerTitle: \"\",\n          header: (props) => (\n            <Header\n              showBack={false}\n              showRouteTitle={false}\n              {...props}\n            />\n          ),\n          tabBarIcon: ({ color }) => (\n            <FontAwesomeIcon icon={faUser} color={color} size={25} />\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"Start\"\n        component={Start}\n        options={{\n          headerTitle: \"\",\n          title: \"Start\",\n          header: (props) => (\n            <Header showBack={false} showRouteTitle={false} {...props} />\n          ),\n          tabBarIcon: ({ color }) => (\n            <FontAwesomeIcon icon={faPlus} color={color} size={25} />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Exercises\"\n        component={Exercises}\n        options={{\n          headerTitle: \"\",\n          title: \"Exercises\",\n          header: (props) => (\n            <Header showBack={false} showRouteTitle={false} {...props} />\n          ),\n          tabBarIcon: ({ color }) => (\n            <FontAwesomeIcon icon={faDumbbell} color={color} size={25} />\n          ),\n        }}\n      />\n      <BottomTab.Screen\n        name=\"History\"\n        component={History}\n        options={() => ({\n          headerTitle: \"\",\n          title: \"History\",\n          header: (props) => (\n            <Header showBack={false} showRouteTitle={false} {...props} />\n          ),\n          tabBarIcon: ({ color }) => (\n            <FontAwesomeIcon icon={faClockRotateLeft} color={color} size={25} />\n          ),\n        })}\n      />\n    </BottomTab.Navigator>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport Navigation from \"./navigation\";\nimport { NativeBaseProvider } from \"native-base\";\nimport \"react-native-url-polyfill/auto\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <Provider store={store}>\n        <NativeBaseProvider>\n          <SafeAreaProvider>\n            <Navigation />\n            <StatusBar />\n          </SafeAreaProvider>\n        </NativeBaseProvider>\n      </Provider>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","var map = {\n\t\"./af\": 381,\n\t\"./af.js\": 381,\n\t\"./ar\": 382,\n\t\"./ar-dz\": 383,\n\t\"./ar-dz.js\": 383,\n\t\"./ar-kw\": 384,\n\t\"./ar-kw.js\": 384,\n\t\"./ar-ly\": 385,\n\t\"./ar-ly.js\": 385,\n\t\"./ar-ma\": 386,\n\t\"./ar-ma.js\": 386,\n\t\"./ar-sa\": 387,\n\t\"./ar-sa.js\": 387,\n\t\"./ar-tn\": 388,\n\t\"./ar-tn.js\": 388,\n\t\"./ar.js\": 382,\n\t\"./az\": 389,\n\t\"./az.js\": 389,\n\t\"./be\": 390,\n\t\"./be.js\": 390,\n\t\"./bg\": 391,\n\t\"./bg.js\": 391,\n\t\"./bm\": 392,\n\t\"./bm.js\": 392,\n\t\"./bn\": 393,\n\t\"./bn-bd\": 394,\n\t\"./bn-bd.js\": 394,\n\t\"./bn.js\": 393,\n\t\"./bo\": 395,\n\t\"./bo.js\": 395,\n\t\"./br\": 396,\n\t\"./br.js\": 396,\n\t\"./bs\": 397,\n\t\"./bs.js\": 397,\n\t\"./ca\": 398,\n\t\"./ca.js\": 398,\n\t\"./cs\": 399,\n\t\"./cs.js\": 399,\n\t\"./cv\": 400,\n\t\"./cv.js\": 400,\n\t\"./cy\": 401,\n\t\"./cy.js\": 401,\n\t\"./da\": 402,\n\t\"./da.js\": 402,\n\t\"./de\": 403,\n\t\"./de-at\": 404,\n\t\"./de-at.js\": 404,\n\t\"./de-ch\": 405,\n\t\"./de-ch.js\": 405,\n\t\"./de.js\": 403,\n\t\"./dv\": 406,\n\t\"./dv.js\": 406,\n\t\"./el\": 407,\n\t\"./el.js\": 407,\n\t\"./en-au\": 408,\n\t\"./en-au.js\": 408,\n\t\"./en-ca\": 409,\n\t\"./en-ca.js\": 409,\n\t\"./en-gb\": 410,\n\t\"./en-gb.js\": 410,\n\t\"./en-ie\": 411,\n\t\"./en-ie.js\": 411,\n\t\"./en-il\": 412,\n\t\"./en-il.js\": 412,\n\t\"./en-in\": 413,\n\t\"./en-in.js\": 413,\n\t\"./en-nz\": 414,\n\t\"./en-nz.js\": 414,\n\t\"./en-sg\": 415,\n\t\"./en-sg.js\": 415,\n\t\"./eo\": 416,\n\t\"./eo.js\": 416,\n\t\"./es\": 417,\n\t\"./es-do\": 418,\n\t\"./es-do.js\": 418,\n\t\"./es-mx\": 419,\n\t\"./es-mx.js\": 419,\n\t\"./es-us\": 420,\n\t\"./es-us.js\": 420,\n\t\"./es.js\": 417,\n\t\"./et\": 421,\n\t\"./et.js\": 421,\n\t\"./eu\": 422,\n\t\"./eu.js\": 422,\n\t\"./fa\": 423,\n\t\"./fa.js\": 423,\n\t\"./fi\": 424,\n\t\"./fi.js\": 424,\n\t\"./fil\": 425,\n\t\"./fil.js\": 425,\n\t\"./fo\": 426,\n\t\"./fo.js\": 426,\n\t\"./fr\": 427,\n\t\"./fr-ca\": 428,\n\t\"./fr-ca.js\": 428,\n\t\"./fr-ch\": 429,\n\t\"./fr-ch.js\": 429,\n\t\"./fr.js\": 427,\n\t\"./fy\": 430,\n\t\"./fy.js\": 430,\n\t\"./ga\": 431,\n\t\"./ga.js\": 431,\n\t\"./gd\": 432,\n\t\"./gd.js\": 432,\n\t\"./gl\": 433,\n\t\"./gl.js\": 433,\n\t\"./gom-deva\": 434,\n\t\"./gom-deva.js\": 434,\n\t\"./gom-latn\": 435,\n\t\"./gom-latn.js\": 435,\n\t\"./gu\": 436,\n\t\"./gu.js\": 436,\n\t\"./he\": 437,\n\t\"./he.js\": 437,\n\t\"./hi\": 438,\n\t\"./hi.js\": 438,\n\t\"./hr\": 439,\n\t\"./hr.js\": 439,\n\t\"./hu\": 440,\n\t\"./hu.js\": 440,\n\t\"./hy-am\": 441,\n\t\"./hy-am.js\": 441,\n\t\"./id\": 442,\n\t\"./id.js\": 442,\n\t\"./is\": 443,\n\t\"./is.js\": 443,\n\t\"./it\": 444,\n\t\"./it-ch\": 445,\n\t\"./it-ch.js\": 445,\n\t\"./it.js\": 444,\n\t\"./ja\": 446,\n\t\"./ja.js\": 446,\n\t\"./jv\": 447,\n\t\"./jv.js\": 447,\n\t\"./ka\": 448,\n\t\"./ka.js\": 448,\n\t\"./kk\": 449,\n\t\"./kk.js\": 449,\n\t\"./km\": 450,\n\t\"./km.js\": 450,\n\t\"./kn\": 451,\n\t\"./kn.js\": 451,\n\t\"./ko\": 452,\n\t\"./ko.js\": 452,\n\t\"./ku\": 453,\n\t\"./ku.js\": 453,\n\t\"./ky\": 454,\n\t\"./ky.js\": 454,\n\t\"./lb\": 455,\n\t\"./lb.js\": 455,\n\t\"./lo\": 456,\n\t\"./lo.js\": 456,\n\t\"./lt\": 457,\n\t\"./lt.js\": 457,\n\t\"./lv\": 458,\n\t\"./lv.js\": 458,\n\t\"./me\": 459,\n\t\"./me.js\": 459,\n\t\"./mi\": 460,\n\t\"./mi.js\": 460,\n\t\"./mk\": 461,\n\t\"./mk.js\": 461,\n\t\"./ml\": 462,\n\t\"./ml.js\": 462,\n\t\"./mn\": 463,\n\t\"./mn.js\": 463,\n\t\"./mr\": 464,\n\t\"./mr.js\": 464,\n\t\"./ms\": 465,\n\t\"./ms-my\": 466,\n\t\"./ms-my.js\": 466,\n\t\"./ms.js\": 465,\n\t\"./mt\": 467,\n\t\"./mt.js\": 467,\n\t\"./my\": 468,\n\t\"./my.js\": 468,\n\t\"./nb\": 469,\n\t\"./nb.js\": 469,\n\t\"./ne\": 470,\n\t\"./ne.js\": 470,\n\t\"./nl\": 471,\n\t\"./nl-be\": 472,\n\t\"./nl-be.js\": 472,\n\t\"./nl.js\": 471,\n\t\"./nn\": 473,\n\t\"./nn.js\": 473,\n\t\"./oc-lnc\": 474,\n\t\"./oc-lnc.js\": 474,\n\t\"./pa-in\": 475,\n\t\"./pa-in.js\": 475,\n\t\"./pl\": 476,\n\t\"./pl.js\": 476,\n\t\"./pt\": 477,\n\t\"./pt-br\": 478,\n\t\"./pt-br.js\": 478,\n\t\"./pt.js\": 477,\n\t\"./ro\": 479,\n\t\"./ro.js\": 479,\n\t\"./ru\": 480,\n\t\"./ru.js\": 480,\n\t\"./sd\": 481,\n\t\"./sd.js\": 481,\n\t\"./se\": 482,\n\t\"./se.js\": 482,\n\t\"./si\": 483,\n\t\"./si.js\": 483,\n\t\"./sk\": 484,\n\t\"./sk.js\": 484,\n\t\"./sl\": 485,\n\t\"./sl.js\": 485,\n\t\"./sq\": 486,\n\t\"./sq.js\": 486,\n\t\"./sr\": 487,\n\t\"./sr-cyrl\": 488,\n\t\"./sr-cyrl.js\": 488,\n\t\"./sr.js\": 487,\n\t\"./ss\": 489,\n\t\"./ss.js\": 489,\n\t\"./sv\": 490,\n\t\"./sv.js\": 490,\n\t\"./sw\": 491,\n\t\"./sw.js\": 491,\n\t\"./ta\": 492,\n\t\"./ta.js\": 492,\n\t\"./te\": 493,\n\t\"./te.js\": 493,\n\t\"./tet\": 494,\n\t\"./tet.js\": 494,\n\t\"./tg\": 495,\n\t\"./tg.js\": 495,\n\t\"./th\": 496,\n\t\"./th.js\": 496,\n\t\"./tk\": 497,\n\t\"./tk.js\": 497,\n\t\"./tl-ph\": 498,\n\t\"./tl-ph.js\": 498,\n\t\"./tlh\": 499,\n\t\"./tlh.js\": 499,\n\t\"./tr\": 500,\n\t\"./tr.js\": 500,\n\t\"./tzl\": 501,\n\t\"./tzl.js\": 501,\n\t\"./tzm\": 502,\n\t\"./tzm-latn\": 503,\n\t\"./tzm-latn.js\": 503,\n\t\"./tzm.js\": 502,\n\t\"./ug-cn\": 504,\n\t\"./ug-cn.js\": 504,\n\t\"./uk\": 505,\n\t\"./uk.js\": 505,\n\t\"./ur\": 506,\n\t\"./ur.js\": 506,\n\t\"./uz\": 507,\n\t\"./uz-latn\": 508,\n\t\"./uz-latn.js\": 508,\n\t\"./uz.js\": 507,\n\t\"./vi\": 509,\n\t\"./vi.js\": 509,\n\t\"./x-pseudo\": 510,\n\t\"./x-pseudo.js\": 510,\n\t\"./yo\": 511,\n\t\"./yo.js\": 511,\n\t\"./zh-cn\": 512,\n\t\"./zh-cn.js\": 512,\n\t\"./zh-hk\": 513,\n\t\"./zh-hk.js\": 513,\n\t\"./zh-mo\": 514,\n\t\"./zh-mo.js\": 514,\n\t\"./zh-tw\": 515,\n\t\"./zh-tw.js\": 515\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 694;","import { Button, IModalProps, Modal, Text } from \"native-base\";\n\ninterface IModalWrapper extends IModalProps {\n  modalWidth?: string;\n  children: React.ReactNode;\n  header: string;\n  saveHandler?: () => void;\n}\n\nconst ModalWrapper = (props: IModalWrapper) => {\n  const {\n    isOpen,\n    onClose,\n    children,\n    header,\n    saveHandler,\n    width = \"4/5\",\n    size = \"md\",\n  } = props;\n\n  return (\n    <Modal isOpen={isOpen} onClose={() => onClose(false)} size={size}>\n      <Modal.Content maxH=\"4/5\" w={width}>\n        <Modal.CloseButton />\n        <Modal.Header borderBottomWidth={0}>{header}</Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n        {saveHandler && (\n          <Modal.Footer borderTopWidth={0}>\n            <Button.Group space={2}>\n              <Button backgroundColor={\"info.500\"} onPress={saveHandler}>\n                <Text fontWeight={\"semibold\"} color={\"coolGray.100\"}>\n                  Save\n                </Text>\n              </Button>\n            </Button.Group>\n          </Modal.Footer>\n        )}\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default ModalWrapper;\n","module.exports = __webpack_public_path__ + \"static/media/undraw_Powerful_re_frhr.3129c363.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.a8677c49.png\";","module.exports = __webpack_public_path__ + \"static/media/welcome-hero.ef776176.png\";","import { createAsyncThunk, createSlice, isRejectedWithValue } from \"@reduxjs/toolkit\";\nimport { supabase } from \"../supabase/supabaseClient\";\n\nexport interface IOneRepMaxLine {\n  type: \"ONE_REP_MAX_EST\";\n  title: string;\n  subtitle: string;\n  exerciseId: number;\n  user_id: string;\n}\n\nexport interface IWidgetInterface {\n  type: \"SESSION_FREQUENCY\" | \"WEIGHT_TRACKER\";\n  title: string;\n  subtitle: string;\n  user_id: string;\n}\n\nexport type TWidget = IWidgetInterface | IOneRepMaxLine\n\ninterface IInitialState {\n  status: \"fulfilled\" | \"pending\" | \"rejected\" | \"idle\";\n  widgets: {\n    [key: string]: TWidget\n  };\n}\n\nconst initialState: IInitialState = {\n  status: \"idle\",\n  widgets: {},\n};\n\nconst widgetSlice = createSlice({\n  name: \"widget_slice\",\n  initialState: initialState,\n  reducers: {\n    refreshWidgets: (state) => {\n      state = initialState\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(createWidget.fulfilled, (state, { payload }) => {\n      if (!payload) return\n\n      const { widgetId } = payload\n\n      const { type, title, subtitle } = payload as TWidget\n\n      let newWidget = {\n        title,\n        subtitle,\n        type,\n      }\n\n      state.widgets[widgetId] = newWidget as TWidget\n\n      if (type === \"ONE_REP_MAX_EST\") {\n        const { exerciseId } = payload as IOneRepMaxLine\n        const newWidget = state.widgets[widgetId] as IOneRepMaxLine\n        newWidget.exerciseId = exerciseId\n      }\n    })\n      .addCase(createWidget.rejected, (state, payload) => {\n        state.status = \"rejected\"\n      })\n      .addCase(getWidgets.fulfilled, (state, { payload }) => {\n        payload.map(el => {\n          if (\"exerciseId\" in el) {\n            const { exerciseId, title, subtitle, type, user_id } = el as IOneRepMaxLine\n            return state.widgets[el.id] = {\n              exerciseId,\n              subtitle,\n              title,\n              type,\n              user_id\n            }\n          }\n\n          const { title, subtitle, type, user_id } = el as IWidgetInterface\n          return state.widgets[el.id] = {\n            subtitle,\n            title,\n            type,\n            user_id\n          }\n        })\n\n        state.status = \"fulfilled\"\n      })\n      .addCase(getWidgets.rejected, (state, _) => {\n        state.status = \"rejected\"\n      })\n      .addCase(deleteWidget.fulfilled, (state, { payload }) => {\n        state.status = \"fulfilled\"\n        delete state.widgets[payload]\n      })\n  },\n});\n\ninterface IGetWidgets {\n  userId: string;\n}\n\nexport const getWidgets = createAsyncThunk(\n  \"widget/getWidgets\",\n  async (payload: IGetWidgets, { rejectWithValue }) => {\n    console.log(\"GETWIDGETS!\")\n    const { userId } = payload\n\n    const { data, error } = await supabase.from(\"widgets\").select(\"id, type, title, subtitle, exerciseId\").eq(\"user_id\", userId)\n\n    if (error) {\n      console.error(error)\n      return rejectWithValue([])\n    }\n\n    return data\n  }\n)\n\nexport const createWidget = createAsyncThunk(\n  \"widget/createWidget\",\n  async (payload: TWidget, { rejectWithValue }) => {\n    const { subtitle, title, type, user_id } = payload\n\n    let newWidget = {\n      type,\n      title,\n      subtitle,\n      user_id\n    }\n\n    if (\"exerciseId\" in payload && type === \"ONE_REP_MAX_EST\") {\n      const { exerciseId } = payload as IOneRepMaxLine\n      newWidget = { ...newWidget, exerciseId } as IOneRepMaxLine\n    }\n\n    const { data, error } = await supabase.from(\"widgets\").insert(newWidget)\n\n    if (error) {\n      console.error(error)\n      return rejectWithValue({})\n    }\n\n    return {\n      ...payload, widgetId: data[0].id\n    }\n  }\n)\n\ntype TDeleteWidget = number\n\nexport const deleteWidget = createAsyncThunk(\n  \"widget/deleteWidget\",\n  async (payload: TDeleteWidget, { rejectWithValue }) => {\n\n    const { error } = await supabase.from(\"widgets\").delete().eq(\"id\", payload)\n\n    if (error) {\n      return rejectWithValue([])\n    }\n\n    return payload\n  }\n)\n// export const { createWidget } = widgetSlice.actions\nexport default widgetSlice.reducer;\n\nexport const { refreshWidgets } = widgetSlice.actions"],"sourceRoot":""}